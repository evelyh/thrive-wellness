{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/FROG/csc301/team-project-4-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/JourneyManagement/CreateQuestScreen.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport \"react-native-gesture-handler\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NetworkContext } from \"../../contexts/Networking\";\nvar url = 'http://3.15.239.159:8000';\n\nvar CreateQuestScreen = function (_React$Component) {\n  _inherits(CreateQuestScreen, _React$Component);\n\n  var _super = _createSuper(CreateQuestScreen);\n\n  function CreateQuestScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CreateQuestScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onChangeText = function (key, val) {\n      _this.setState(_defineProperty({}, key, val));\n    };\n\n    _this.createQuest = function _callee() {\n      var journey, journeyId, data, fetchResponse, quest;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              journey = _this.state.journey;\n              journeyId = journey.id;\n\n              if (!(_this.state.name === '' || _this.state.description === '')) {\n                _context.next = 5;\n                break;\n              }\n\n              _this.displayEmptyFieldsAlert();\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              data = {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': 'Token ' + _this.context.token\n                },\n                body: JSON.stringify({\n                  name: _this.state.name,\n                  description: _this.state.description\n                })\n              };\n              _context.prev = 6;\n              console.log(url + '/api/journeys/' + journeyId + '/quests/');\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(fetch(url + '/api/journeys/' + journeyId + '/quests/', data));\n\n            case 10:\n              fetchResponse = _context.sent;\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 13:\n              quest = _context.sent;\n              console.log(\"Quest:\", quest);\n\n              _this.props.navigation.goBack();\n\n              _context.next = 22;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](6);\n              console.log(_context.t0);\n\n              _this.context.displayNoConnectionAlert();\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[6, 18]], Promise);\n    };\n\n    _this.getJourneys = function _callee2() {\n      var fetchResponse, respJson;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"Beginning journeys fetch\");\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url + '/api/journeys/', {\n                method: 'GET',\n                headers: {\n                  'Authorization': 'Token ' + _this.context.token\n                }\n              }));\n\n            case 4:\n              fetchResponse = _context2.sent;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 7:\n              respJson = _context2.sent;\n\n              _this.setState({\n                journeys: respJson\n              });\n\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _this.context.displayNoConnectionAlert();\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    };\n\n    _this.displayEmptyFieldsAlert = function () {\n      Alert.alert(\"Empty input\", \"Please make sure to fill all required fields.\", [{\n        text: \"Close\",\n        style: \"cancel\"\n      }]);\n    };\n\n    _this.displayNoJourneysSelectedAlert = function () {\n      Alert.alert(\"No journeys selected\", \"Please make sure select at least one journey.\", [{\n        text: \"Close\",\n        style: \"cancel\"\n      }]);\n    };\n\n    _this.isJourneySelected = function (journeyToCheck) {\n      for (var _iterator = _createForOfIteratorHelperLoose(_this.state.selectedJourneys), _step; !(_step = _iterator()).done;) {\n        var journey = _step.value;\n        if (journey.id === journeyToCheck.id) return true;\n      }\n\n      return false;\n    };\n\n    _this.onToggleJourney = function (journey) {\n      if (_this.isJourneySelected(journey)) {\n        var updatedList = [];\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose(_this.state.selectedJourneys), _step2; !(_step2 = _iterator2()).done;) {\n          var listJourney = _step2.value;\n          if (journey.id === listJourney.id) continue;\n          updatedList.push(listJourney);\n        }\n\n        _this.setState({\n          selectedJourneys: updatedList\n        });\n      } else {\n        var _updatedList = [].concat(_toConsumableArray(_this.state.selectedJourneys), [journey]);\n\n        _this.setState({\n          selectedJourneys: _updatedList\n        });\n      }\n    };\n\n    _this.state = {\n      journey: _this.props.route.params.journey,\n      name: '',\n      description: ''\n    };\n    console.log(_this.state);\n    return _this;\n  }\n\n  _createClass(CreateQuestScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var journeys = this.state.journeys;\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Quest name\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('name', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Description\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('description', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.bottomButtonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.createQuest,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, \"Create new Quest\"))));\n    }\n  }]);\n\n  return CreateQuestScreen;\n}(React.Component);\n\nCreateQuestScreen.contextType = NetworkContext;\nexport { CreateQuestScreen as default };\n\nvar JourneyListItem = function (_React$Component2) {\n  _inherits(JourneyListItem, _React$Component2);\n\n  var _super2 = _createSuper(JourneyListItem);\n\n  function JourneyListItem() {\n    var _this3;\n\n    _classCallCheck(this, JourneyListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _super2.call.apply(_super2, [this].concat(args));\n\n    _this3.onToggle = function () {\n      _this3.props.onToggleJourney(_this3.props.journeyInfo);\n    };\n\n    return _this3;\n  }\n\n  _createClass(JourneyListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$journeyIn = this.props.journeyInfo,\n          name = _this$props$journeyIn.name,\n          description = _this$props$journeyIn.description;\n      var _this$props = this.props,\n          journeyInfo = _this$props.journeyInfo,\n          isSelected = _this$props.isSelected;\n      var journeySelected = isSelected(journeyInfo);\n      return React.createElement(TouchableOpacity, {\n        style: journeySelected ? styles.journeyListSelected : styles.journeyListDeselected,\n        onPress: this.onToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }, name, \": \", description));\n    }\n  }]);\n\n  return JourneyListItem;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  view: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    fontSize: 16,\n    color: \"#918573\"\n  },\n  input: {\n    width: '85%',\n    height: 55,\n    backgroundColor: 'white',\n    margin: 10,\n    padding: 8,\n    borderRadius: 14,\n    color: 'green',\n    fontSize: 18,\n    fontWeight: '500'\n  },\n  bottomButtonContainer: {\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    width: '100%'\n  },\n  button: {\n    width: '50%',\n    height: 50,\n    marginTop: 7,\n    backgroundColor: \"#22AAAA\",\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  scrollView: {\n    flex: 9,\n    flexDirection: 'column',\n    width: '100%'\n  },\n  scrollContents: {\n    flexGrow: 1,\n    alignItems: 'center'\n  },\n  journeyListSelected: {\n    width: '85%',\n    paddingTop: 16,\n    paddingBottom: 16,\n    marginTop: 7,\n    backgroundColor: \"#62c84e\",\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  journeyListDeselected: {\n    width: '85%',\n    paddingTop: 16,\n    paddingBottom: 16,\n    marginTop: 7,\n    backgroundColor: \"#d1ddcf\",\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/FROG/csc301/team-project-4-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/JourneyManagement/CreateQuestScreen.js"],"names":["React","NetworkContext","url","CreateQuestScreen","props","onChangeText","key","val","setState","createQuest","journey","state","journeyId","id","name","description","displayEmptyFieldsAlert","data","method","headers","context","token","body","JSON","stringify","console","log","fetch","fetchResponse","json","quest","navigation","goBack","displayNoConnectionAlert","getJourneys","respJson","journeys","Alert","alert","text","style","displayNoJourneysSelectedAlert","isJourneySelected","journeyToCheck","selectedJourneys","onToggleJourney","updatedList","listJourney","push","route","params","styles","container","input","bottomButtonContainer","button","Component","contextType","JourneyListItem","onToggle","journeyInfo","isSelected","journeySelected","journeyListSelected","journeyListDeselected","StyleSheet","create","flex","justifyContent","alignItems","view","fontSize","color","width","height","backgroundColor","margin","padding","borderRadius","fontWeight","marginTop","borderWidth","borderColor","scrollView","flexDirection","scrollContents","flexGrow","paddingTop","paddingBottom"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;AAUA,SAAQC,cAAR;AAEA,IAAMC,GAAG,GAAG,0BAAZ;;IAEqBC,iB;;;;;AAInB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAYnBC,YAZmB,GAYJ,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,YAAKC,QAAL,qBAAiBF,GAAjB,EAAuBC,GAAvB;AACD,KAdkB;;AAAA,UAgBnBE,WAhBmB,GAgBL;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,cAAAA,OADI,GACQ,MAAKC,KADb,CACJD,OADI;AAENE,cAAAA,SAFM,GAEMF,OAAO,CAACG,EAFd;;AAAA,oBAIR,MAAKF,KAAL,CAAWG,IAAX,KAAoB,EAApB,IAA0B,MAAKH,KAAL,CAAWI,WAAX,KAA2B,EAJ7C;AAAA;AAAA;AAAA;;AAKV,oBAAKC,uBAAL;;AALU;;AAAA;AAcNC,cAAAA,IAdM,GAcC;AACXC,gBAAAA,MAAM,EAAE,MADG;AAEXC,gBAAAA,OAAO,EAAE;AACP,4BAAU,kBADH;AAEP,kCAAgB,kBAFT;AAGP,mCAAiB,WAAW,MAAKC,OAAL,CAAaC;AAHlC,iBAFE;AAOXC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,kBAAAA,IAAI,EAAE,MAAKH,KAAL,CAAWG,IADE;AAEnBC,kBAAAA,WAAW,EAAE,MAAKJ,KAAL,CAAWI;AAFL,iBAAf;AAPK,eAdD;AAAA;AA2BVU,cAAAA,OAAO,CAACC,GAAR,CAAYxB,GAAG,GAAG,gBAAN,GAAyBU,SAAzB,GAAqC,UAAjD;AA3BU;AAAA,+CA4BgBe,KAAK,CAACzB,GAAG,GAAG,gBAAN,GAC9BU,SAD8B,GAClB,UADiB,EACLK,IADK,CA5BrB;;AAAA;AA4BNW,cAAAA,aA5BM;AAAA;AAAA,+CA8BUA,aAAa,CAACC,IAAd,EA9BV;;AAAA;AA8BJC,cAAAA,KA9BI;AAgCVL,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,KAAtB;;AAEA,oBAAK1B,KAAL,CAAW2B,UAAX,CAAsBC,MAAtB;;AAlCU;AAAA;;AAAA;AAAA;AAAA;AAoCVP,cAAAA,OAAO,CAACC,GAAR;;AACA,oBAAKN,OAAL,CAAaa,wBAAb;;AArCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhBK;;AAAA,UA4DnBC,WA5DmB,GA4DL;AAAA;AAAA;AAAA;AAAA;AAAA;AACZT,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AADY;AAAA;AAAA,+CAGgBC,KAAK,CAACzB,GAAG,GAAG,gBAAP,EAAyB;AACtDgB,gBAAAA,MAAM,EAAE,KAD8C;AAEtDC,gBAAAA,OAAO,EAAE;AACP,mCAAiB,WAAW,MAAKC,OAAL,CAAaC;AADlC;AAF6C,eAAzB,CAHrB;;AAAA;AAGNO,cAAAA,aAHM;AAAA;AAAA,+CASWA,aAAa,CAACC,IAAd,EATX;;AAAA;AASNM,cAAAA,QATM;;AAWV,oBAAK3B,QAAL,CAAc;AACZ4B,gBAAAA,QAAQ,EAAED;AADE,eAAd;;AAXU;AAAA;;AAAA;AAAA;AAAA;;AAeV,oBAAKf,OAAL,CAAaa,wBAAb;;AAfU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5DK;;AAAA,UA+EnBjB,uBA/EmB,GA+EO,YAAM;AAC9BqB,MAAAA,KAAK,CAACC,KAAN,CACE,aADF,EAEE,+CAFF,EAGE,CACE;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADF,CAHF;AAUD,KA1FkB;;AAAA,UA+FnBC,8BA/FmB,GA+Fc,YAAM;AACrCJ,MAAAA,KAAK,CAACC,KAAN,CACE,sBADF,EAEE,+CAFF,EAGE,CACE;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADF,CAHF;AAUD,KA1GkB;;AAAA,UA+GnBE,iBA/GmB,GA+GC,UAACC,cAAD,EAAoB;AACtC,2DAAoB,MAAKhC,KAAL,CAAWiC,gBAA/B,wCAAiD;AAAA,YAAxClC,OAAwC;AAC/C,YAAIA,OAAO,CAACG,EAAR,KAAe8B,cAAc,CAAC9B,EAAlC,EACE,OAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACD,KAtHkB;;AAAA,UA4HnBgC,eA5HmB,GA4HD,UAACnC,OAAD,EAAa;AAE7B,UAAG,MAAKgC,iBAAL,CAAuBhC,OAAvB,CAAH,EAAoC;AAElC,YAAIoC,WAAW,GAAG,EAAlB;;AACA,8DAAwB,MAAKnC,KAAL,CAAWiC,gBAAnC,2CAAqD;AAAA,cAA5CG,WAA4C;AACnD,cAAIrC,OAAO,CAACG,EAAR,KAAekC,WAAW,CAAClC,EAA/B,EACE;AAEFiC,UAAAA,WAAW,CAACE,IAAZ,CAAiBD,WAAjB;AACD;;AACD,cAAKvC,QAAL,CAAc;AACZoC,UAAAA,gBAAgB,EAAEE;AADN,SAAd;AAGD,OAZD,MAYO;AAEL,YAAMA,YAAW,gCAAO,MAAKnC,KAAL,CAAWiC,gBAAlB,IAAoClC,OAApC,EAAjB;;AACA,cAAKF,QAAL,CAAc;AACZoC,UAAAA,gBAAgB,EAAEE;AADN,SAAd;AAGD;AACF,KAjJkB;;AAEjB,UAAKnC,KAAL,GAAa;AAGXD,MAAAA,OAAO,EAAE,MAAKN,KAAL,CAAW6C,KAAX,CAAiBC,MAAjB,CAAwBxC,OAHtB;AAIXI,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,WAAW,EAAE;AALF,KAAb;AAOAU,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKf,KAAjB;AATiB;AAUlB;;;;wCA4ImB,CAInB;;;2CAEsB,CAEtB;;;6BAEQ;AAAA;;AAAA,UACCyB,QADD,GACc,KAAKzB,KADnB,CACCyB,QADD;AAEP,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEe,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,QAAA,WAAW,EAAC,YAFd;AAGE,QAAA,cAAc,EAAC,MAHjB;AAIE,QAAA,YAAY,EAAE,sBAAC9C,GAAD;AAAA,iBAAS,MAAI,CAACF,YAAL,CAAkB,MAAlB,EAA0BE,GAA1B,CAAT;AAAA,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE4C,MAAM,CAACE,KADhB;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,cAAc,EAAC,MAHjB;AAIG,QAAA,YAAY,EAAE,sBAAC9C,GAAD;AAAA,iBAAS,MAAI,CAACF,YAAL,CAAkB,aAAlB,EAAiCE,GAAjC,CAAT;AAAA,SAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAaE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE4C,MAAM,CAACG,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACI,MADhB;AAEE,QAAA,OAAO,EAAE,KAAK9C,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CADF,CAbF,CADF;AAwBD;;;;EA9L4CT,KAAK,CAACwD,S;;AAAhCrD,iB,CAEZsD,W,GAAcxD,c;SAFFE,iB;;IAiMfuD,e;;;;;;;;;;;;;;;;WAEJC,Q,GAAW,YAAM;AACf,aAAKvD,KAAL,CAAWyC,eAAX,CAA2B,OAAKzC,KAAL,CAAWwD,WAAtC;AACD,K;;;;;;;6BAEQ;AAAA,kCACuB,KAAKxD,KAAL,CAAWwD,WADlC;AAAA,UACC9C,IADD,yBACCA,IADD;AAAA,UACOC,WADP,yBACOA,WADP;AAAA,wBAE6B,KAAKX,KAFlC;AAAA,UAECwD,WAFD,eAECA,WAFD;AAAA,UAEcC,UAFd,eAEcA,UAFd;AAGP,UAAMC,eAAe,GAAGD,UAAU,CAACD,WAAD,CAAlC;AAEA,aACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAIE,eAAD,GACNX,MAAM,CAACY,mBADD,GAENZ,MAAM,CAACa,qBAHX;AAKE,QAAA,OAAO,EAAE,KAAKL,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO7C,IAAP,QAAeC,WAAf,CAPF,CADF;AAWD;;;;EAtB2Bf,KAAK,CAACwD,S;;AAyBpC,IAAML,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAE,CADF;AAEJE,IAAAA,UAAU,EAAE,QAFR;AAGJD,IAAAA,cAAc,EAAE;AAHZ,GANyB;AAW/B7B,EAAAA,IAAI,EAAE;AACJgC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAXyB;AAe/BnB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,eAAe,EAAE,OAHZ;AAILC,IAAAA,MAAM,EAAE,EAJH;AAKLC,IAAAA,OAAO,EAAE,CALJ;AAMLC,IAAAA,YAAY,EAAE,EANT;AAOLN,IAAAA,KAAK,EAAE,OAPF;AAQLD,IAAAA,QAAQ,EAAE,EARL;AASLQ,IAAAA,UAAU,EAAE;AATP,GAfwB;AA0B/BzB,EAAAA,qBAAqB,EAAE;AACrBe,IAAAA,UAAU,EAAE,QADS;AAErBD,IAAAA,cAAc,EAAE,UAFK;AAGrBK,IAAAA,KAAK,EAAE;AAHc,GA1BQ;AA+B/BlB,EAAAA,MAAM,EAAE;AACNkB,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNM,IAAAA,SAAS,EAAE,CAHL;AAINL,IAAAA,eAAe,EAAE,SAJX;AAKNG,IAAAA,YAAY,EAAE,EALR;AAMNG,IAAAA,WAAW,EAAE,CANP;AAONC,IAAAA,WAAW,EAAE,MAPP;AAQNb,IAAAA,UAAU,EAAE,QARN;AASND,IAAAA,cAAc,EAAE;AATV,GA/BuB;AA0C/Be,EAAAA,UAAU,EAAE;AACVhB,IAAAA,IAAI,EAAE,CADI;AAEViB,IAAAA,aAAa,EAAE,QAFL;AAGVX,IAAAA,KAAK,EAAE;AAHG,GA1CmB;AA+C/BY,EAAAA,cAAc,EAAE;AACdC,IAAAA,QAAQ,EAAE,CADI;AAEdjB,IAAAA,UAAU,EAAE;AAFE,GA/Ce;AAmD/BN,EAAAA,mBAAmB,EAAE;AACnBU,IAAAA,KAAK,EAAE,KADY;AAEnBc,IAAAA,UAAU,EAAE,EAFO;AAGnBC,IAAAA,aAAa,EAAE,EAHI;AAInBR,IAAAA,SAAS,EAAE,CAJQ;AAKnBL,IAAAA,eAAe,EAAE,SALE;AAMnBG,IAAAA,YAAY,EAAE,EANK;AAOnBG,IAAAA,WAAW,EAAE,CAPM;AAQnBC,IAAAA,WAAW,EAAE,MARM;AASnBb,IAAAA,UAAU,EAAE,QATO;AAUnBD,IAAAA,cAAc,EAAE;AAVG,GAnDU;AA+D/BJ,EAAAA,qBAAqB,EAAE;AACrBS,IAAAA,KAAK,EAAE,KADc;AAErBc,IAAAA,UAAU,EAAE,EAFS;AAGrBC,IAAAA,aAAa,EAAE,EAHM;AAIrBR,IAAAA,SAAS,EAAE,CAJU;AAKrBL,IAAAA,eAAe,EAAE,SALI;AAMrBG,IAAAA,YAAY,EAAE,EANO;AAOrBG,IAAAA,WAAW,EAAE,CAPQ;AAQrBC,IAAAA,WAAW,EAAE,MARQ;AASrBb,IAAAA,UAAU,EAAE,QATS;AAUrBD,IAAAA,cAAc,EAAE;AAVK;AA/DQ,CAAlB,CAAf","sourcesContent":["import \"react-native-gesture-handler\";\nimport React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  TextInput,\n  SafeAreaView,\n  View,\n  ScrollView, Alert,\n} from \"react-native\";\nimport {NetworkContext} from \"../../contexts/Networking\";\n\nconst url = 'http://3.15.239.159:8000'\n\nexport default class CreateQuestScreen extends React.Component {\n\n  static contextType = NetworkContext\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // selectedJourneys: this.props.route.params.journeys,\n      // journeys: [],\n      journey: this.props.route.params.journey,\n      name: '',\n      description: ''\n    }\n    console.log(this.state)\n  }\n\n  onChangeText = (key, val) => {\n    this.setState({ [key]: val })\n  }\n\n  createQuest = async() => {\n    const { journey } = this.state\n    const journeyId = journey.id\n\n    if (this.state.name === '' || this.state.description === '') {\n      this.displayEmptyFieldsAlert()\n      return\n    }\n    // if (selectedJourneys.length <= 0) {\n    //   this.displayNoJourneysSelectedAlert()\n    //   return\n    // }\n\n    // Creating new Quest\n    const data = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.context.token\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        description: this.state.description\n      })\n    }\n    try {\n      console.log(url + '/api/journeys/' + journeyId + '/quests/')\n      let fetchResponse = await fetch(url + '/api/journeys/' +\n        journeyId + '/quests/', data)\n      const quest = await fetchResponse.json()\n\n      console.log(\"Quest:\", quest)\n\n      this.props.navigation.goBack()\n    } catch (e) {\n      console.log(e)\n      this.context.displayNoConnectionAlert()\n    }\n  }\n\n  // UNUSED\n  // Was used for choosing to which journeys add the new quest\n  // Current design: quest can be a part of only one journey\n  getJourneys = async () => {\n    console.log(\"Beginning journeys fetch\")\n    try {\n      let fetchResponse = await fetch(url + '/api/journeys/', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Token ' + this.context.token\n        },\n      })\n      let respJson = await fetchResponse.json()\n\n      this.setState({\n        journeys: respJson\n      })\n    } catch (e) {\n      this.context.displayNoConnectionAlert()\n    }\n  }\n\n  displayEmptyFieldsAlert = () => {\n    Alert.alert(\n      \"Empty input\",\n      \"Please make sure to fill all required fields.\",\n      [\n        {\n          text: \"Close\",\n          style: \"cancel\"\n        }\n      ]\n    );\n  }\n\n  // UNUSED\n  // Was used for choosing to which journeys add the new quest\n  // Current design: quest can be a part of only one journey\n  displayNoJourneysSelectedAlert = () => {\n    Alert.alert(\n      \"No journeys selected\",\n      \"Please make sure select at least one journey.\",\n      [\n        {\n          text: \"Close\",\n          style: \"cancel\"\n        }\n      ]\n    );\n  }\n\n  // UNUSED\n  // Was used for choosing to which journeys add the new quest\n  // Current design: quest can be a part of only one journey\n  isJourneySelected = (journeyToCheck) => {\n    for (let journey of this.state.selectedJourneys) {\n      if (journey.id === journeyToCheck.id)\n        return true\n    }\n\n    return false\n  }\n\n\n  // UNUSED\n  // Was used for choosing to which journeys add the new quest\n  // Current design: quest can be a part of only one journey\n  onToggleJourney = (journey) => {\n\n    if(this.isJourneySelected(journey)) {\n      // Deselect\n      let updatedList = []\n      for (let listJourney of this.state.selectedJourneys) {\n        if (journey.id === listJourney.id)\n          continue\n\n        updatedList.push(listJourney)\n      }\n      this.setState({\n        selectedJourneys: updatedList\n      })\n    } else {\n      // Select\n      const updatedList = [...this.state.selectedJourneys, journey]\n      this.setState({\n        selectedJourneys: updatedList\n      })\n    }\n  }\n\n  // UNUSED\n  // Was used for getting journeys list journeys for selection during creation\n  // Current design: quest can be a part of only one journey\n  componentDidMount() {\n    // this._unsubscribe = this.props.navigation.addListener('focus', () => {\n    //   this.getJourneys()\n    // })\n  }\n\n  componentWillUnmount() {\n    // this._unsubscribe()\n  }\n\n  render() {\n    const { journeys } = this.state\n    return (\n      <SafeAreaView style={styles.container}>\n        <TextInput\n          style={styles.input}\n          placeholder='Quest name'\n          autoCapitalize=\"none\"\n          onChangeText={(val) => this.onChangeText('name', val)}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder='Description'\n          autoCapitalize=\"none\"\n           onChangeText={(val) => this.onChangeText('description', val)}\n        />\n        <View style={styles.bottomButtonContainer} >\n          <TouchableOpacity\n            style={styles.button}\n            onPress={this.createQuest}\n          >\n            <Text>Create new Quest</Text>\n          </TouchableOpacity>\n        </View>\n      </SafeAreaView>\n    );\n  }\n}\n\nclass JourneyListItem extends React.Component {\n\n  onToggle = () => {\n    this.props.onToggleJourney(this.props.journeyInfo)\n  }\n\n  render() {\n    const { name, description } = this.props.journeyInfo\n    const { journeyInfo, isSelected } = this.props\n    const journeySelected = isSelected(journeyInfo)\n\n    return(\n      <TouchableOpacity\n        style={ (journeySelected) ?\n          styles.journeyListSelected :\n          styles.journeyListDeselected\n        }\n        onPress={this.onToggle}\n      >\n        <Text>{name}: {description}</Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  view: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  text: {\n    fontSize: 16,\n    color: \"#918573\",\n  },\n  input: {\n    width: '85%',\n    height: 55,\n    backgroundColor: 'white',\n    margin: 10,\n    padding: 8,\n    borderRadius: 14,\n    color: 'green',\n    fontSize: 18,\n    fontWeight: '500',\n  },\n  bottomButtonContainer: {\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    width: '100%'\n  },\n  button: {\n    width: '50%',\n    height: 50,\n    marginTop: 7,\n    backgroundColor: \"#22AAAA\",\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  scrollView: {\n    flex: 9,\n    flexDirection: 'column',\n    width: '100%',\n  },\n  scrollContents: {\n    flexGrow: 1,\n    alignItems: 'center'\n  },\n  journeyListSelected: {\n    width: '85%',\n    paddingTop: 16,\n    paddingBottom: 16,\n    marginTop: 7,\n    backgroundColor: \"#62c84e\",\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  journeyListDeselected: {\n    width: '85%',\n    paddingTop: 16,\n    paddingBottom: 16,\n    marginTop: 7,\n    backgroundColor: \"#d1ddcf\",\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }\n});\n"]},"metadata":{},"sourceType":"module"}