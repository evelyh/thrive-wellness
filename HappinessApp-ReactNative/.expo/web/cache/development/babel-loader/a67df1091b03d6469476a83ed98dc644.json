{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Desktop\\\\team-project-2-bellwoods-strategic-capital\\\\HappinessApp-ReactNative\\\\screens\\\\Authentication\\\\SignUp2.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NetworkContext } from \"../../contexts/Networking\";\n\nvar SignUp2 = function (_React$Component) {\n  _inherits(SignUp2, _React$Component);\n\n  var _super = _createSuper(SignUp2);\n\n  function SignUp2(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp2);\n\n    _this = _super.call(this, props);\n\n    _this.onSetSex = function (val) {\n      if (val !== 'M' && val !== 'F') {\n        _this.setState({\n          displaySexInputWarning: true,\n          sex: val\n        });\n      } else {\n        _this.setState({\n          displaySexInputWarning: false,\n          sex: val\n        });\n      }\n    };\n\n    _this.onSetAge = function (val) {\n      var intAge = parseInt(val, 10);\n\n      if (!intAge || intAge < 0) {\n        _this.setState({\n          displayAgeInputWarning: true,\n          age: intAge\n        });\n      } else {\n        _this.setState({\n          displayAgeInputWarning: false,\n          age: intAge\n        });\n      }\n    };\n\n    _this.onChangeText = function (key, val) {\n      if (key === 'sex') {\n        _this.onSetSex(val);\n      } else if (key === 'age') {\n        _this.onSetAge(val);\n      } else {\n        _this.setState(_defineProperty({}, key, val));\n      }\n    };\n\n    _this.checkNewUserData = function () {\n      var _this$state = _this.state,\n          username = _this$state.username,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          password = _this$state.password,\n          email = _this$state.email,\n          age = _this$state.age,\n          sex = _this$state.sex;\n\n      if (username === '' || password === '' || age === '' || sex === '') {\n        _this.displayEmptyFieldsAlert();\n\n        return;\n      }\n\n      _this.context.signUp(username, password, email, firstName, lastName, age, sex);\n    };\n\n    _this.displayEmptyFieldsAlert = function () {\n      Alert.alert(\"Empty input\", \"Please make sure to fill all required fields.\", [{\n        text: \"Close\",\n        style: \"cancel\"\n      }]);\n    };\n\n    var _this$props$route$par = _this.props.route.params,\n        _email = _this$props$route$par.email,\n        _firstName = _this$props$route$par.firstName,\n        _lastName = _this$props$route$par.lastName;\n    _this.state = {\n      email: _email,\n      firstName: _firstName,\n      lastName: _lastName,\n      username: '',\n      password: '',\n      age: -1,\n      sex: '',\n      displaySexInputWarning: false,\n      displayAgeInputWarning: false\n    };\n    return _this;\n  }\n\n  _createClass(SignUp2, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Username\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('username', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('password', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }), this.state.displayAgeInputWarning && React.createElement(Text, {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, \"Please make sure to enter a positive number for the age\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Age\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('age', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }), this.state.displaySexInputWarning && React.createElement(Text, {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }, \"Please make sure to enter either M, or F\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Sex (enter M for male, F for female)\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('sex', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        title: \"Sign Up\",\n        onPress: this.checkNewUserData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SignUp2;\n}(React.Component);\n\nSignUp2.contextType = NetworkContext;\nexport { SignUp2 as default };\nvar styles = StyleSheet.create({\n  input: {\n    width: '90%',\n    height: 55,\n    backgroundColor: 'white',\n    margin: 10,\n    padding: 8,\n    borderRadius: 14,\n    color: 'green',\n    fontSize: 18,\n    fontWeight: '500'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  inputContainer: {\n    marginTop: 30,\n    width: '100%',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Calvin/Desktop/team-project-2-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/Authentication/SignUp2.js"],"names":["React","NetworkContext","SignUp2","props","onSetSex","val","setState","displaySexInputWarning","sex","onSetAge","intAge","parseInt","displayAgeInputWarning","age","onChangeText","key","checkNewUserData","state","username","firstName","lastName","password","email","displayEmptyFieldsAlert","context","signUp","Alert","alert","text","style","route","params","styles","container","inputContainer","input","color","Component","contextType","StyleSheet","create","width","height","backgroundColor","margin","padding","borderRadius","fontSize","fontWeight","flex","alignItems","marginTop"],"mappings":"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","sourcesContent":["// SignUp1.js\r\nimport React from 'react'\r\nimport {\r\n  View,\r\n  Button,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n  SafeAreaView, Alert\r\n} from 'react-native'\r\n\r\nimport {NetworkContext} from '../../contexts/Networking'\r\n\r\nexport default class SignUp2 extends React.Component {\r\n\r\n  static contextType = NetworkContext\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {email, firstName, lastName} = this.props.route.params\r\n    this.state = {\r\n      email: email,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      username: '',\r\n      password: '',\r\n      age: -1,\r\n      sex: '',\r\n      displaySexInputWarning: false, // display text above input if\r\n                                     // wrong character was entered\r\n      displayAgeInputWarning: false, // display text above input if\r\n                                     // age entered is invalid (less then 0...)\r\n    }\r\n  }\r\n\r\n  onSetSex = (val) => {\r\n    if (val !== 'M' && val !== 'F') {\r\n      this.setState({\r\n        displaySexInputWarning: true,\r\n        sex: val\r\n      })\r\n    } else {\r\n      this.setState({\r\n        displaySexInputWarning: false,\r\n        sex: val\r\n      })\r\n    }\r\n  }\r\n\r\n  onSetAge = (val) => {\r\n\r\n    const intAge = parseInt(val, 10)\r\n\r\n    if (!intAge || intAge < 0) {\r\n      this.setState({\r\n        displayAgeInputWarning: true,\r\n        age: intAge\r\n      })\r\n    } else {\r\n      this.setState({\r\n        displayAgeInputWarning: false,\r\n        age: intAge\r\n      })\r\n    }\r\n  }\r\n\r\n  onChangeText = (key, val) => {\r\n    if (key === 'sex') {\r\n      this.onSetSex(val)\r\n    } else if (key === 'age') {\r\n      this.onSetAge(val)\r\n    } else {\r\n      this.setState({ [key]: val })\r\n    }\r\n  }\r\n\r\n  // Check if email is correct format\r\n  // check if phone number is correct format\r\n  // etc\r\n  checkNewUserData = () => {\r\n    const {\r\n      username,\r\n      firstName,\r\n      lastName,\r\n      password,\r\n      email,\r\n      age,\r\n      sex,\r\n    } = this.state\r\n\r\n    if (username === '' || password === '' || age === '' || sex === '') {\r\n      this.displayEmptyFieldsAlert()\r\n      return\r\n    }\r\n\r\n    this.context.signUp(username, password, email,\r\n                        firstName, lastName, age, sex)\r\n  }\r\n\r\n  displayEmptyFieldsAlert = () => {\r\n    Alert.alert(\r\n      \"Empty input\",\r\n      \"Please make sure to fill all required fields.\",\r\n      [\r\n        {\r\n          text: \"Close\",\r\n          style: \"cancel\"\r\n        }\r\n      ]\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder='Username'\r\n            autoCapitalize=\"none\"\r\n            onChangeText={val => this.onChangeText('username', val)}\r\n          />\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder='Password'\r\n            secureTextEntry={true}\r\n            autoCapitalize=\"none\"\r\n            onChangeText={val => this.onChangeText('password', val)}\r\n          />\r\n          {this.state.displayAgeInputWarning && (\r\n            <Text style={{color: 'red'}}>\r\n              Please make sure to enter a positive number for the age\r\n            </Text>\r\n          )}\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder='Age'\r\n            autoCapitalize=\"none\"\r\n            onChangeText={val => this.onChangeText('age', val)}\r\n          />\r\n          {this.state.displaySexInputWarning && (\r\n            <Text style={{color: 'red'}}>Please make sure to enter either M, or F</Text>\r\n          )}\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder='Sex (enter M for male, F for female)'\r\n            onChangeText={val => this.onChangeText('sex', val)}\r\n          />\r\n          <Button\r\n            title='Sign Up'\r\n            onPress={this.checkNewUserData}\r\n          />\r\n        </View>\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    width: '90%',\r\n    height: 55,\r\n    backgroundColor: 'white',\r\n    margin: 10,\r\n    padding: 8,\r\n    borderRadius: 14,\r\n    color: 'green',\r\n    fontSize: 18,\r\n    fontWeight: '500',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center'\r\n  },\r\n  inputContainer: {\r\n    marginTop: 30,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}