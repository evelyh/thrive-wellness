{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/FROG/csc301/team-project-4-bellwoods-strategic-capital/HappinessApp-ReactNative/navigation/MainStackNavigator.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport { Entypo, MaterialCommunityIcons, FontAwesome5, MaterialIcons } from \"@expo/vector-icons\";\nimport HappinessTree from \"../screens/HappinessTree\";\nimport JourneyScreen from \"../screens/JourneyScreen\";\nimport QuestScreen from \"../screens/QuestScreen\";\nimport QuestFeedbackScreen from \"../screens/QuestFeedbackScreen\";\nimport DailyQuestScreen from \"../screens/DailyQuestScreen\";\nimport Friends from \"../screens/Friends\";\nimport Profile from \"../screens/Profile\";\nimport CreateJourneyScreen from \"../screens/JourneyManagement/CreateJourneyScreen\";\nimport CreateQuestScreen from \"../screens/JourneyManagement/CreateQuestScreen\";\nimport ManageAllJourneysScreen from \"../screens/JourneyManagement/ManageAllJourneysScreen\";\nimport ManageJourneyScreen from \"../screens/JourneyManagement/ManageJourneyScreen\";\nimport ManageQuestScreen from \"../screens/JourneyManagement/ManageQuestScreen\";\nimport { NetworkContext } from \"../contexts/Networking\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Icon } from \"react-native-elements\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nexport var MainStackNavigator = function (_React$Component) {\n  _inherits(MainStackNavigator, _React$Component);\n\n  var _super = _createSuper(MainStackNavigator);\n\n  function MainStackNavigator() {\n    _classCallCheck(this, MainStackNavigator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MainStackNavigator, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var color = _ref2.color,\n                  size = _ref2.size;\n              var modules = {\n                Tree: \"MaterialComm\",\n                Journey: \"Entypo\",\n                Daily: \"MaterialIcons\",\n                Friends: \"FontAwesome\",\n                Profile: \"FontAwesome\"\n              };\n              var icons = {\n                Tree: \"tree\",\n                Journey: \"flower\",\n                Daily: \"today\",\n                Friends: \"user-friends\",\n                Profile: \"user-alt\"\n              };\n              if (modules[route.name] === \"MaterialComm\") return React.createElement(MaterialCommunityIcons, {\n                name: icons[route.name],\n                color: color,\n                size: size,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 17\n                }\n              });else if (modules[route.name] === \"MaterialIcons\") return React.createElement(MaterialIcons, {\n                name: icons[route.name],\n                color: color,\n                size: size,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 17\n                }\n              });else if (modules[route.name] === \"FontAwesome\") return React.createElement(FontAwesome5, {\n                name: icons[route.name],\n                color: color,\n                size: size,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }\n              });else if (modules[route.name] === \"Entypo\") return React.createElement(Entypo, {\n                name: icons[route.name],\n                color: color,\n                size: size,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 17\n                }\n              });\n            }\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Tree\",\n        component: HappinessTree,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Journey\",\n        component: JourneyScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Daily\",\n        component: DailyQuestScreen,\n        options: {\n          title: \"Daily Quest\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Friends\",\n        component: Friends,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: Profile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MainStackNavigator;\n}(React.Component);\nMainStackNavigator.contextType = NetworkContext;\nexport var MainStack = function (_React$Component2) {\n  _inherits(MainStack, _React$Component2);\n\n  var _super2 = _createSuper(MainStack);\n\n  function MainStack() {\n    var _this2;\n\n    _classCallCheck(this, MainStack);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n\n    _this2.handleSettings = function () {\n      navigation.goBack;\n      console.log(\"Settings button\");\n    };\n\n    return _this2;\n  }\n\n  _createClass(MainStack, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Stack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: MainStackNavigator,\n        options: function options(_ref3) {\n          var route = _ref3.route,\n              navigation = _ref3.navigation;\n          return {\n            headerTitle: getHeaderTitle(route),\n            headerRight: function headerRight() {\n              return React.createElement(Icon, {\n                reverse: true,\n                name: \"ios-settings\",\n                type: \"ionicon\",\n                color: \"#517fa4\",\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 15\n                }\n              });\n            }\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Quest\",\n        component: QuestScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Feedback\",\n        component: QuestFeedbackScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Create Journey\",\n        component: CreateJourneyScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Create Quest\",\n        component: CreateQuestScreen,\n        initialParams: {\n          journeys: []\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Manage Journeys\",\n        component: ManageAllJourneysScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Manage Journey\",\n        component: ManageJourneyScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Manage Quest\",\n        component: ManageQuestScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MainStack;\n}(React.Component);\n\nfunction getHeaderTitle(route) {\n  var _getFocusedRouteNameF;\n\n  var routeName = (_getFocusedRouteNameF = getFocusedRouteNameFromRoute(route)) != null ? _getFocusedRouteNameF : \"Tree\";\n\n  switch (routeName) {\n    case \"Tree\":\n      return \"Happiness Tree\";\n\n    case \"Journey\":\n      return \"Journey\";\n\n    case \"Daily\":\n      return \"Daily Quest\";\n\n    case \"Friends\":\n      return \"Friends\";\n\n    case \"Profile\":\n      return \"Profile\";\n  }\n}","map":{"version":3,"sources":["/Users/FROG/csc301/team-project-4-bellwoods-strategic-capital/HappinessApp-ReactNative/navigation/MainStackNavigator.js"],"names":["React","createBottomTabNavigator","createStackNavigator","getFocusedRouteNameFromRoute","Entypo","MaterialCommunityIcons","FontAwesome5","MaterialIcons","HappinessTree","JourneyScreen","QuestScreen","QuestFeedbackScreen","DailyQuestScreen","Friends","Profile","CreateJourneyScreen","CreateQuestScreen","ManageAllJourneysScreen","ManageJourneyScreen","ManageQuestScreen","NetworkContext","Icon","Tab","Stack","MainStackNavigator","route","tabBarIcon","color","size","modules","Tree","Journey","Daily","icons","name","title","Component","contextType","MainStack","handleSettings","navigation","goBack","console","log","headerTitle","getHeaderTitle","headerRight","journeys","routeName"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport {\n  Entypo,\n  MaterialCommunityIcons,\n  FontAwesome5,\n  MaterialIcons,\n} from \"@expo/vector-icons\";\n\nimport HappinessTree from \"../screens/HappinessTree\";\nimport JourneyScreen from \"../screens/JourneyScreen\";\nimport QuestScreen from \"../screens/QuestScreen\";\nimport QuestFeedbackScreen from \"../screens/QuestFeedbackScreen\";\nimport DailyQuestScreen from \"../screens/DailyQuestScreen\";\nimport Friends from \"../screens/Friends\";\nimport Profile from \"../screens/Profile\";\nimport CreateJourneyScreen from \"../screens/JourneyManagement/CreateJourneyScreen\";\nimport CreateQuestScreen from \"../screens/JourneyManagement/CreateQuestScreen\";\nimport ManageAllJourneysScreen from \"../screens/JourneyManagement/ManageAllJourneysScreen\";\nimport ManageJourneyScreen from \"../screens/JourneyManagement/ManageJourneyScreen\";\nimport ManageQuestScreen from \"../screens/JourneyManagement/ManageQuestScreen\";\nimport { NetworkContext } from \"../contexts/Networking\";\nimport { TouchableOpacity, Image, Button, Modal } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\n\n\nexport class MainStackNavigator extends React.Component {\n  static contextType = NetworkContext;\n\n  render() {\n    return (\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ color, size }) => {\n            const modules = {\n              Tree: \"MaterialComm\",\n              Journey: \"Entypo\",\n              Daily: \"MaterialIcons\",\n              Friends: \"FontAwesome\",\n              Profile: \"FontAwesome\",\n            };\n            const icons = {\n              Tree: \"tree\",\n              Journey: \"flower\", // or Leaf, rainbow,\n              Daily: \"today\",\n              Friends: \"user-friends\",\n              Profile: \"user-alt\",\n            };\n\n            if (modules[route.name] === \"MaterialComm\")\n              return (\n                <MaterialCommunityIcons\n                  name={icons[route.name]}\n                  color={color}\n                  size={size}\n                />\n              );\n            else if (modules[route.name] === \"MaterialIcons\")\n              return (\n                <MaterialIcons\n                  name={icons[route.name]}\n                  color={color}\n                  size={size}\n                />\n              );\n            else if (modules[route.name] === \"FontAwesome\")\n              return (\n                <FontAwesome5\n                  name={icons[route.name]}\n                  color={color}\n                  size={size}\n                />\n              );\n            else if (modules[route.name] === \"Entypo\")\n              return (\n                <Entypo name={icons[route.name]} color={color} size={size} />\n              );\n          },\n        })}\n      >\n        <Tab.Screen name=\"Tree\" component={HappinessTree} />\n        <Tab.Screen name=\"Journey\" component={JourneyScreen} />\n        <Tab.Screen\n          name=\"Daily\"\n          component={DailyQuestScreen}\n          options={{\n            title: \"Daily Quest\",\n          }}\n        />\n        <Tab.Screen name=\"Friends\" component={Friends} />\n        <Tab.Screen name=\"Profile\" component={Profile} />\n      </Tab.Navigator>\n    );\n  }\n}\n\n\n\nexport class MainStack extends React.Component {\n  handleSettings = () => {\n    navigation.goBack\n    console.log(\"Settings button\")\n  };\n\n  render() {\n    return (\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Home\"\n          component={MainStackNavigator}\n          options={({ route, navigation }) => ({\n            headerTitle: getHeaderTitle(route),\n            headerRight: () => (\n              <Icon\n\t\t\t  reverse\n\t\t\t  name= 'ios-settings'\n\t\t\t  type='ionicon'\n\t\t\t  color='#517fa4'\n              />\n            ),\n          })}\n        />\n        <Stack.Screen name=\"Quest\" component={QuestScreen} />\n        <Stack.Screen name={\"Feedback\"} component={QuestFeedbackScreen} />\n        <Stack.Screen name=\"Create Journey\" component={CreateJourneyScreen} />\n        <Stack.Screen\n          name=\"Create Quest\"\n          component={CreateQuestScreen}\n          initialParams={{\n            journeys: [],\n          }}\n        />\n        <Stack.Screen\n          name=\"Manage Journeys\"\n          component={ManageAllJourneysScreen}\n        />\n        <Stack.Screen name=\"Manage Journey\" component={ManageJourneyScreen} />\n        <Stack.Screen name=\"Manage Quest\" component={ManageQuestScreen} />\n      </Stack.Navigator>\n    );\n  }\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = getFocusedRouteNameFromRoute(route) ?? \"Tree\";\n\n  switch (routeName) {\n    case \"Tree\":\n      return \"Happiness Tree\";\n    case \"Journey\":\n      return \"Journey\";\n    case \"Daily\":\n      return \"Daily Quest\";\n    case \"Friends\":\n      return \"Friends\";\n    case \"Profile\":\n      return \"Profile\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}