{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Desktop\\\\team-project-2-bellwoods-strategic-capital\\\\HappinessApp-ReactNative\\\\screens\\\\QuestFeedbackScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport \"react-native-gesture-handler\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Slider from \"@react-native-community/slider\";\nimport { NetworkContext } from \"../contexts/Networking\";\n\nvar QuestFeedbackScreen = function (_React$Component) {\n  _inherits(QuestFeedbackScreen, _React$Component);\n\n  var _super = _createSuper(QuestFeedbackScreen);\n\n  function QuestFeedbackScreen(props) {\n    var _this;\n\n    _classCallCheck(this, QuestFeedbackScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onValueChange = function (key, val) {\n      _this.setState(_defineProperty({}, key, val));\n    };\n\n    _this.onSubmit = function _callee() {\n      var quest, _this$state, answer, feelingRating, questRating;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              quest = _this.props.route.params.quest;\n              _this$state = _this.state, answer = _this$state.answer, feelingRating = _this$state.feelingRating, questRating = _this$state.questRating;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.context.completeQuest(quest.id, answer, feelingRating, questRating));\n\n            case 4:\n              _this.props.navigation.navigate(\"Home\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var _answer = _this.props.route.params.answer;\n    _this.state = {\n      answer: _answer,\n      feelingRating: 5,\n      questRating: 5\n    };\n    return _this;\n  }\n\n  _createClass(QuestFeedbackScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.feedbackContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.heading2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"Good job!\"), React.createElement(View, {\n        style: styles.line,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.heading3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, \"How did you like this quest?\"), React.createElement(View, {\n        style: styles.line2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.mainContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.blobContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.blobText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, \"This app is dynamic and gives different users different Quests and different Journey recommendations. The program becomes tailored to meet your individual needs and circumstances. We gather the information below after each quest to help us customize the program to you. Thank you for taking the time to submit it.\")), React.createElement(View, {\n        style: styles.line3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.sliderContentBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.sliderTextContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.sliderText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"Rate your feeling after completing the quest: \", this.state.feelingRating)), React.createElement(View, {\n        style: styles.sliderContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, React.createElement(Slider, {\n        style: styles.slider,\n        minimumValue: 1,\n        maximumValue: 10,\n        step: 1,\n        value: this.state.feelingRating,\n        onValueChange: function onValueChange(val) {\n          _this2.onValueChange('feelingRating', val);\n        },\n        minimumTrackTintColor: \"#C9DBC5\",\n        maximumTrackTintColor: \"#FFFFFF\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }))), React.createElement(View, {\n        style: styles.line3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.sliderContentBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.sliderTextContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.sliderText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, \"Rate the quest: \", this.state.questRating)), React.createElement(View, {\n        style: styles.sliderContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, React.createElement(Slider, {\n        style: styles.slider,\n        minimumValue: 1,\n        maximumValue: 10,\n        step: 1,\n        value: this.state.questRating,\n        onValueChange: function onValueChange(val) {\n          _this2.onValueChange('questRating', val);\n        },\n        minimumTrackTintColor: \"#C9DBC5\",\n        maximumTrackTintColor: \"#FFFFFF\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }))))), React.createElement(View, {\n        style: styles.buttonsView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.journeyButton,\n        onPress: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return QuestFeedbackScreen;\n}(React.Component);\n\nQuestFeedbackScreen.contextType = NetworkContext;\nexport { QuestFeedbackScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  feedbackContainer: {\n    flex: 10\n  },\n  mainContainer: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  blobContainer: {\n    width: '92%'\n  },\n  blobText: {\n    fontSize: 16\n  },\n  buttonsView: {\n    flex: 1\n  },\n  journeyButton: {\n    flex: 1,\n    marginTop: 5,\n    marginLeft: 20,\n    marginRight: 20,\n    paddingTop: 5,\n    paddingBottom: 5,\n    backgroundColor: \"#C9DBC5\",\n    borderRadius: 30,\n    borderWidth: 1,\n    borderColor: \"#efefef\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    fontSize: 16\n  },\n  heading: {\n    fontSize: 24,\n    color: \"#918573\"\n  },\n  heading2: {\n    fontSize: 24,\n    color: \"#918573\",\n    marginLeft: 25,\n    marginTop: 16\n  },\n  heading3: {\n    fontSize: 20,\n    color: \"#27214D\",\n    marginLeft: 25,\n    marginTop: 16\n  },\n  line: {\n    backgroundColor: \"#F3F3F3\",\n    height: 1,\n    width: '100%',\n    marginTop: 8\n  },\n  line2: {\n    backgroundColor: \"#6C9191\",\n    height: 1,\n    width: '90%',\n    marginLeft: 26,\n    marginTop: 8\n  },\n  line3: {\n    backgroundColor: \"#778080\",\n    height: 1,\n    width: '90%',\n    marginTop: 13\n  },\n  sliderContentBox: {\n    marginTop: 15,\n    width: '100%',\n    alignItems: 'center'\n  },\n  sliderTextContainer: {\n    width: '92%'\n  },\n  sliderText: {\n    fontSize: 16\n  },\n  sliderContainer: {\n    width: '100%',\n    alignItems: 'center'\n  },\n  slider: {\n    width: '90%',\n    height: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/Calvin/Desktop/team-project-2-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/QuestFeedbackScreen.js"],"names":["React","Slider","NetworkContext","QuestFeedbackScreen","props","onValueChange","key","val","setState","onSubmit","quest","route","params","state","answer","feelingRating","questRating","context","completeQuest","id","navigation","navigate","styles","container","feedbackContainer","heading2","line","heading3","line2","mainContainer","blobContainer","blobText","line3","sliderContentBox","sliderTextContainer","sliderText","sliderContainer","slider","buttonsView","journeyButton","text","Component","contextType","StyleSheet","create","flex","marginTop","alignItems","width","fontSize","marginLeft","marginRight","paddingTop","paddingBottom","backgroundColor","borderRadius","borderWidth","borderColor","justifyContent","heading","color","height"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  ScrollView,\r\n  Alert,\r\n} from \"react-native\";\r\nimport Slider from \"@react-native-community/slider\"\r\n\r\nimport { NetworkContext } from \"../contexts/Networking\";\r\n\r\nexport default class QuestFeedbackScreen extends React.Component {\r\n  static contextType = NetworkContext;\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const {answer} = this.props.route.params\r\n    this.state = {\r\n      answer: answer,\r\n      feelingRating: 5,\r\n      questRating: 5,\r\n    }\r\n  }\r\n\r\n  onValueChange = (key, val) => {\r\n    this.setState({\r\n      [key]: val,\r\n    })\r\n  }\r\n\r\n  onSubmit = async() => {\r\n    const { quest } = this.props.route.params\r\n    const { answer, feelingRating, questRating} = this.state\r\n    await this.context.completeQuest(quest.id, answer, feelingRating, questRating);\r\n    this.props.navigation.navigate(\"Home\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n\r\n        <View style={styles.feedbackContainer}>\r\n          <View>\r\n            <Text style={styles.heading2}>Good job!</Text>\r\n            <View style={styles.line}/>\r\n            <Text style={styles.heading3}>How did you like this quest?</Text>\r\n            <View style={styles.line2}/>\r\n          </View>\r\n          <View style={styles.mainContainer}>\r\n            <View style={styles.blobContainer}>\r\n              <Text style={styles.blobText}>\r\n                This app is dynamic and gives different users different Quests and different Journey\r\n                recommendations. The program becomes tailored to meet your individual needs and\r\n                circumstances. We gather the information below after each quest to help us customize\r\n                the program to you. Thank you for taking the time to submit it.\r\n              </Text>\r\n            </View>\r\n            <View style={styles.line3}/>\r\n            <View style={styles.sliderContentBox}>\r\n              <View style={styles.sliderTextContainer}>\r\n                <Text style={styles.sliderText}>\r\n                  Rate your feeling after completing the quest: {this.state.feelingRating}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.sliderContainer}>\r\n                <Slider\r\n                  style={styles.slider}\r\n                  minimumValue={1}\r\n                  maximumValue={10}\r\n                  step={1}\r\n                  value={this.state.feelingRating}\r\n                  onValueChange={(val) => {this.onValueChange('feelingRating', val)}}\r\n                  minimumTrackTintColor=\"#C9DBC5\"\r\n                  maximumTrackTintColor=\"#FFFFFF\"\r\n                />\r\n              </View>\r\n            </View>\r\n            <View style={styles.line3}/>\r\n            <View style={styles.sliderContentBox}>\r\n              <View style={styles.sliderTextContainer}>\r\n                <Text style={styles.sliderText}>\r\n                  Rate the quest: {this.state.questRating}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.sliderContainer}>\r\n                <Slider\r\n                  style={styles.slider}\r\n                  minimumValue={1}\r\n                  maximumValue={10}\r\n                  step={1}\r\n                  value={this.state.questRating}\r\n                  onValueChange={(val) => {this.onValueChange('questRating', val)}}\r\n                  minimumTrackTintColor=\"#C9DBC5\"\r\n                  maximumTrackTintColor=\"#FFFFFF\"\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.buttonsView}>\r\n          <TouchableOpacity\r\n            style={styles.journeyButton}\r\n            onPress={this.onSubmit}\r\n          >\r\n            <Text style={styles.text}>Submit</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  feedbackContainer: {\r\n    flex: 10,\r\n  },\r\n\r\n  mainContainer: {\r\n    marginTop: 15,\r\n    alignItems: 'center',\r\n  },\r\n\r\n  blobContainer: {\r\n    width: '92%',\r\n  },\r\n\r\n  blobText: {\r\n    fontSize: 16\r\n  },\r\n\r\n  buttonsView: {\r\n    flex: 1,\r\n  },\r\n\r\n  journeyButton: {\r\n    flex: 1,\r\n    marginTop: 5,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    backgroundColor: \"#C9DBC5\",\r\n    borderRadius: 30,\r\n    borderWidth: 1,\r\n    borderColor: \"#efefef\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  text: {\r\n    fontSize: 16,\r\n  },\r\n\r\n  heading: {\r\n    fontSize: 24,\r\n    color: \"#918573\",\r\n  },\r\n  heading2: {\r\n    fontSize: 24,\r\n    color: \"#918573\",\r\n    marginLeft: 25,\r\n    marginTop: 16,\r\n  },\r\n\r\n  heading3: {\r\n    fontSize: 20,\r\n    color: \"#27214D\",\r\n    marginLeft: 25,\r\n    marginTop: 16,\r\n  },\r\n\r\n  line: {\r\n    backgroundColor: \"#F3F3F3\",\r\n    height: 1,\r\n    width: '100%',\r\n    marginTop: 8,\r\n  },\r\n\r\n  line2: {\r\n    backgroundColor: \"#6C9191\",\r\n    height: 1,\r\n    width: '90%',\r\n    marginLeft: 26,\r\n    marginTop: 8,\r\n  },\r\n  line3: {\r\n    backgroundColor: \"#778080\",\r\n    height: 1,\r\n    width: '90%',\r\n    marginTop: 13,\r\n  },\r\n\r\n  sliderContentBox: {\r\n    marginTop: 15,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  sliderTextContainer: {\r\n    width: '92%',\r\n  },\r\n  sliderText: {\r\n    fontSize: 16,\r\n  },\r\n  sliderContainer: {\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  slider: {\r\n    width: '90%',\r\n    height: 40\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}