{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Desktop\\\\team-project-2-bellwoods-strategic-capital\\\\HappinessApp-ReactNative\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport WelcomeScreen from \"./screens/WelcomeScreen\";\nimport SplashScreen from \"./screens/Authentication/SplashScreen\";\nimport LoginStackNavigator from \"./navigation/LoginStackNavigator\";\nimport { MainStack } from \"./navigation/MainStackNavigator\";\nimport { NetworkContext, NetworkContextProvider } from \"./contexts/Networking\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      welcomeFinished: false\n    };\n\n    _this.onFinishWelcome = function () {\n      _this.setState({\n        welcomeFinished: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var welcomeFinished = this.state.welcomeFinished;\n      console.log(\"BRUH MOMENT INBOUND\");\n      return React.createElement(NetworkContextProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, React.createElement(NetworkContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, function (context) {\n        return context.isLoading ? React.createElement(SplashScreen, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }) : context.isAuthenticated ? welcomeFinished ? React.createElement(MainStack, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }\n        }) : React.createElement(WelcomeScreen, {\n          finishWelcome: _this2.onFinishWelcome,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }\n        }) : React.createElement(LoginStackNavigator, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/Calvin/Desktop/team-project-2-bellwoods-strategic-capital/HappinessApp-ReactNative/App.js"],"names":["React","NavigationContainer","WelcomeScreen","SplashScreen","LoginStackNavigator","MainStack","NetworkContext","NetworkContextProvider","App","state","welcomeFinished","onFinishWelcome","setState","console","log","context","isLoading","isAuthenticated","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,mBAAP;AACA,SAASC,SAAT;AAEA,SAASC,cAAT,EAAyBC,sBAAzB;;IAEqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,eAAe,EAAE;AADX,K;;UAIRC,e,GAAkB,YAAM;AACtB,YAAKC,QAAL,CAAc;AACZF,QAAAA,eAAe,EAAE;AADL,OAAd;AAGD,K;;;;;;;WACD,kBAAS;AAAA;;AACV,UAAOA,eAAP,GAA0B,KAAKD,KAA/B,CAAOC,eAAP;AACGG,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,aACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAACC,OAAD;AAAA,eACCA,OAAO,CAACC,SAAR,GACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,GAEID,OAAO,CAACE,eAAR,GACFP,eAAe,GACb,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADa,GAGb,oBAAC,aAAD;AAAe,UAAA,aAAa,EAAE,MAAI,CAACC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJA,GAOF,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVH;AAAA,OADH,CADF,CADF,CADF;AAqBD;;;;EAnC8BX,KAAK,CAACkB,S;;SAAlBV,G","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n\r\nimport WelcomeScreen from \"./screens/WelcomeScreen\";\r\nimport SplashScreen from \"./screens/Authentication/SplashScreen\";\r\nimport LoginStackNavigator from \"./navigation/LoginStackNavigator\";\r\nimport { MainStack } from \"./navigation/MainStackNavigator\";\r\n\r\nimport { NetworkContext, NetworkContextProvider } from \"./contexts/Networking\";\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    welcomeFinished: false,\r\n  };\r\n\r\n  onFinishWelcome = () => {\r\n    this.setState({\r\n      welcomeFinished: true,\r\n    });\r\n  };\r\n  render() {\r\n\tconst {welcomeFinished} = this.state\r\n    console.log(\"BRUH MOMENT INBOUND\");\r\n\r\n    return (\r\n      <NetworkContextProvider>\r\n        <NavigationContainer>\r\n          <NetworkContext.Consumer>\r\n            {(context) =>\r\n              context.isLoading ? (\r\n                <SplashScreen />\r\n              ) : context.isAuthenticated ? (\r\n                welcomeFinished ? (\r\n                  <MainStack />\r\n                ) : (\r\n                  <WelcomeScreen finishWelcome={this.onFinishWelcome} />\r\n                )\r\n              ) : (\r\n                <LoginStackNavigator />\r\n              )\r\n            }\r\n          </NetworkContext.Consumer>\r\n        </NavigationContainer>\r\n      </NetworkContextProvider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}