{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\cool-\\\\Documents\\\\uoft\\\\3rd Year\\\\CSC301\\\\Project\\\\team-project-4-bellwoods-strategic-capital\\\\HappinessApp-ReactNative\\\\screens\\\\Tree.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\n\nvar Tree = function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    _classCallCheck(this, Tree);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          paddingTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 4\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 5\n        }\n      }, \"Tree\"));\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nexport { Tree as default };","map":{"version":3,"sources":["C:/Users/cool-/Documents/uoft/3rd Year/CSC301/Project/team-project-4-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/Tree.js"],"names":["React","Tree","flex","alignItems","paddingTop","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;IAGqBC,I;;;;;;;;;;;;;6BACX;AAGR,aACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,UAAU,EAAE,QAAvB;AAAiCC,UAAAA,UAAU,EAAE;AAA7C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,CADD;AAOA;;;;EAXgCJ,KAAK,CAACK,S;;SAAnBJ,I","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, Button, SafeAreaView } from 'react-native';\r\n\r\nexport default class Tree extends React.Component {\r\n\trender() {\r\n\t\t// const { name } = this.props.route.params; // Get name from params which comes from the navigate function from LogIn.js\r\n\t\t// const { navigate } = this.props.navigation\r\n\t\treturn (\r\n\t\t\t<View style={{ flex: 1, alignItems: 'center', paddingTop: 10}}>\r\n\t\t\t\t<Text>\r\n\t\t\t\t\tTree\r\n\t\t\t\t</Text>\r\n\t\t\t</View>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}