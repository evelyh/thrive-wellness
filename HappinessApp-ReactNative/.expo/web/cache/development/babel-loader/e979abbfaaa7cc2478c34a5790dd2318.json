{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Desktop\\\\team-project-2-bellwoods-strategic-capital\\\\HappinessApp-ReactNative\\\\contexts\\\\Networking.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { registerForPushNotificationsAsync } from \"./networkingHelpers/notifications\";\nexport var NetworkContext = React.createContext({\n  token: null,\n  isAuthenticated: false,\n  isLoading: true,\n  isAdmin: false,\n  signUp: function signUp() {},\n  signIn: function signIn() {},\n  signOut: function signOut() {},\n  forgotPassword: function forgotPassword() {},\n  loadToken: function loadToken() {},\n  journeys: [],\n  userInfo: {\n    firstname: \"\",\n    lastname: \"\",\n    age: -1\n  },\n  getJourneys: function getJourneys() {},\n  getJourneyInfo: function getJourneyInfo() {},\n  getJourneyProgress: function getJourneyProgress() {},\n  completeQuest: function completeQuest() {},\n  displayNoConnectionAlert: function displayNoConnectionAlert() {}\n});\nvar url = \"http://3.15.239.159:8000\";\nexport var NetworkContextProvider = function (_React$Component) {\n  _inherits(NetworkContextProvider, _React$Component);\n\n  var _super = _createSuper(NetworkContextProvider);\n\n  function NetworkContextProvider() {\n    var _this;\n\n    _classCallCheck(this, NetworkContextProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      token: null,\n      isAuthenticated: false,\n      isLoading: true,\n      isAdmin: false,\n      journeys: [],\n      userInfo: {\n        firstname: \"\",\n        lastname: \"\",\n        age: -1\n      }\n    };\n\n    _this.signUp = function _callee(username, password, email, firstName, lastName, age, sex) {\n      var data, fetchResponse, respJson;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                  Authorization: null\n                },\n                body: JSON.stringify({\n                  firstname: firstName,\n                  lastname: lastName,\n                  username: username,\n                  email: email,\n                  password: password,\n                  age: age,\n                  sex: sex\n                })\n              };\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url + \"/api/auth/register/\", data));\n\n            case 4:\n              fetchResponse = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 7:\n              respJson = _context.sent;\n\n              if (!respJson.token) {\n                _context.next = 15;\n                break;\n              }\n\n              _this.setState({\n                token: respJson.token,\n                isAuthenticated: true\n              });\n\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(_this.setToken(respJson.token));\n\n            case 12:\n              _this.checkIfAdmin();\n\n              _this.getUserMeta();\n\n              registerForPushNotificationsAsync();\n\n            case 15:\n              _context.next = 21;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n              _this.displayNoConnectionAlert();\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 17]], Promise);\n    };\n\n    _this.signIn = function _callee2(login, password) {\n      var data, fetchResponse, respJson;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                  Authorization: null\n                },\n                body: JSON.stringify({\n                  username: login,\n                  password: password\n                })\n              };\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url + \"/api/auth/login/\", data));\n\n            case 4:\n              fetchResponse = _context2.sent;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 7:\n              respJson = _context2.sent;\n\n              if (!respJson.token) {\n                _context2.next = 18;\n                break;\n              }\n\n              console.log(\"Authenticated!\");\n\n              _this.setState({\n                token: respJson.token,\n                isAuthenticated: true\n              });\n\n              _context2.next = 13;\n              return _regeneratorRuntime.awrap(_this.setToken(respJson.token));\n\n            case 13:\n              _this.checkIfAdmin();\n\n              _this.getUserMeta();\n\n              registerForPushNotificationsAsync();\n              _context2.next = 19;\n              break;\n\n            case 18:\n              console.log(\"Authentication Failed!\");\n\n            case 19:\n              _context2.next = 24;\n              break;\n\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _this.displayNoConnectionAlert();\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 21]], Promise);\n    };\n\n    _this.signOut = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                token: null,\n                isAuthenticated: false,\n                isAdmin: false\n              });\n\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(_this.removeToken());\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.forgotPassword = function (email) {\n      console.log(\"TEMP\");\n    };\n\n    _this.loadToken = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\").then(function (value) {\n                console.log(\"Retrieved token: \", value);\n\n                if (value == null) {\n                  _this.setState({\n                    token: null,\n                    isAuthenticated: false,\n                    isLoading: false\n                  });\n                } else {\n                  _this.setState({\n                    token: value,\n                    isAuthenticated: true,\n                    isLoading: false\n                  });\n\n                  registerForPushNotificationsAsync();\n                }\n              }));\n\n            case 2:\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(_this.checkIfAdmin());\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.setToken = function _callee5(token) {\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", token));\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.removeToken = function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"token\"));\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkIfAdmin = function _callee7() {\n      var data, response, respJson;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              data = {\n                method: \"GET\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Token \" + _this.state.token\n                }\n              };\n              _context7.prev = 1;\n              _context7.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url + \"/api/auth/is_admin/\", data));\n\n            case 4:\n              response = _context7.sent;\n              _context7.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              respJson = _context7.sent;\n\n              if (!respJson.status) {\n                _context7.next = 11;\n                break;\n              }\n\n              _this.setState({\n                isAdmin: true\n              });\n\n              return _context7.abrupt(\"return\", true);\n\n            case 11:\n              return _context7.abrupt(\"return\", false);\n\n            case 14:\n              _context7.prev = 14;\n              _context7.t0 = _context7[\"catch\"](1);\n              console.log(_context7.t0);\n\n              _this.displayNoConnectionAlert();\n\n              return _context7.abrupt(\"return\", false);\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, [[1, 14]], Promise);\n    };\n\n    _this.getUserMeta = function _callee8() {\n      var data, response, respJson;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              data = {\n                method: \"GET\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Token \" + _this.state.token\n                }\n              };\n              _context8.prev = 1;\n              _context8.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url + \"/api/auth/get_user_meta/\", data));\n\n            case 4:\n              response = _context8.sent;\n              _context8.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              respJson = _context8.sent;\n\n              _this.setState({\n                userInfo: {\n                  firstname: respJson.firstname,\n                  lastname: respJson.lastname,\n                  age: respJson.age\n                }\n              });\n\n              _context8.next = 15;\n              break;\n\n            case 11:\n              _context8.prev = 11;\n              _context8.t0 = _context8[\"catch\"](1);\n              console.log(_context8.t0);\n\n              _this.displayNoConnectionAlert();\n\n            case 15:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    };\n\n    _this.getJourneys = function _callee9() {\n      var data, fetchResponse, respJson;\n      return _regeneratorRuntime.async(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              console.log(\"Beginning journeys fetch\");\n              data = {\n                method: \"GET\",\n                headers: {\n                  Authorization: \"Token \" + _this.state.token\n                }\n              };\n              _context9.prev = 2;\n              _context9.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url + \"/api/journeys/\", data));\n\n            case 5:\n              fetchResponse = _context9.sent;\n              _context9.next = 8;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 8:\n              respJson = _context9.sent;\n\n              _this.setState({\n                journeys: respJson\n              });\n\n              _context9.next = 15;\n              break;\n\n            case 12:\n              _context9.prev = 12;\n              _context9.t0 = _context9[\"catch\"](2);\n\n              _this.displayNoConnectionAlert();\n\n            case 15:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, [[2, 12]], Promise);\n    };\n\n    _this.getJourneyInfo = function _callee10(journeyId) {\n      var data, fetchResponse, respJson;\n      return _regeneratorRuntime.async(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              data = {\n                method: \"GET\",\n                headers: {\n                  Authorization: \"Token \" + _this.state.token\n                }\n              };\n              _context10.prev = 1;\n              _context10.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url + \"/api/journeys/\" + journeyId + \"/\", data));\n\n            case 4:\n              fetchResponse = _context10.sent;\n              _context10.next = 7;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 7:\n              respJson = _context10.sent;\n              return _context10.abrupt(\"return\", respJson);\n\n            case 11:\n              _context10.prev = 11;\n              _context10.t0 = _context10[\"catch\"](1);\n\n              _this.displayNoConnectionAlert();\n\n              return _context10.abrupt(\"return\", []);\n\n            case 15:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    };\n\n    _this.getJourneyProgress = function _callee11(journeyId) {\n      var data, fetchResponse, respJson;\n      return _regeneratorRuntime.async(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              data = {\n                method: \"GET\",\n                headers: {\n                  Authorization: \"Token \" + _this.state.token\n                }\n              };\n              _context11.prev = 1;\n              _context11.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url + \"/api/progress/getJourneyProgress/\" + journeyId + \"/\", data));\n\n            case 4:\n              fetchResponse = _context11.sent;\n              _context11.next = 7;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 7:\n              respJson = _context11.sent;\n              return _context11.abrupt(\"return\", respJson);\n\n            case 11:\n              _context11.prev = 11;\n              _context11.t0 = _context11[\"catch\"](1);\n              console.log(_context11.t0);\n\n              _this.displayNoConnectionAlert();\n\n              return _context11.abrupt(\"return\", []);\n\n            case 16:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    };\n\n    _this.completeQuest = function _callee12(questId, answer, feelingRating, questRating) {\n      var data, fetchResponse, respJson;\n      return _regeneratorRuntime.async(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              data = {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Token \" + _this.state.token\n                },\n                body: JSON.stringify({\n                  answer: answer,\n                  feeling_rating: feelingRating,\n                  quest_rating: questRating\n                })\n              };\n              _context12.prev = 1;\n              _context12.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url + \"/api/progress/completeQuest/\" + questId + \"/\", data));\n\n            case 4:\n              fetchResponse = _context12.sent;\n              _context12.next = 7;\n              return _regeneratorRuntime.awrap(fetchResponse.json());\n\n            case 7:\n              respJson = _context12.sent;\n              return _context12.abrupt(\"return\", respJson);\n\n            case 11:\n              _context12.prev = 11;\n              _context12.t0 = _context12[\"catch\"](1);\n              console.log(_context12.t0);\n\n              _this.displayNoConnectionAlert();\n\n              return _context12.abrupt(\"return\", []);\n\n            case 16:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    };\n\n    _this.displayNoConnectionAlert = function () {\n      Alert.alert(\"Connection Error\", \"Failed to connect to the server\", [{\n        text: \"Close\",\n        style: \"cancel\"\n      }]);\n    };\n\n    return _this;\n  }\n\n  _createClass(NetworkContextProvider, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NetworkContext.Provider, {\n        value: {\n          token: this.state.token,\n          isAuthenticated: this.state.isAuthenticated,\n          isLoading: this.state.isLoading,\n          isAdmin: this.state.isAdmin,\n          signUp: this.signUp,\n          signIn: this.signIn,\n          signOut: this.signOut,\n          forgotPassword: this.forgotPassword,\n          loadToken: this.loadToken,\n          journeys: this.state.journeys,\n          userInfo: this.state.userInfo,\n          getJourneys: this.getJourneys,\n          getJourneyInfo: this.getJourneyInfo,\n          getJourneyProgress: this.getJourneyProgress,\n          completeQuest: this.completeQuest,\n          displayNoConnectionAlert: this.displayNoConnectionAlert\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return NetworkContextProvider;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/Calvin/Desktop/team-project-2-bellwoods-strategic-capital/HappinessApp-ReactNative/contexts/Networking.js"],"names":["React","AsyncStorage","registerForPushNotificationsAsync","NetworkContext","createContext","token","isAuthenticated","isLoading","isAdmin","signUp","signIn","signOut","forgotPassword","loadToken","journeys","userInfo","firstname","lastname","age","getJourneys","getJourneyInfo","getJourneyProgress","completeQuest","displayNoConnectionAlert","url","NetworkContextProvider","state","username","password","email","firstName","lastName","sex","data","method","headers","Accept","Authorization","body","JSON","stringify","fetch","fetchResponse","json","respJson","setState","setToken","checkIfAdmin","getUserMeta","console","log","login","removeToken","getItem","then","value","setItem","removeItem","response","status","journeyId","questId","answer","feelingRating","questRating","feeling_rating","quest_rating","Alert","alert","text","style","props","children","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport { Alert } from \"react-native\";\r\nimport { registerForPushNotificationsAsync } from \"./networkingHelpers/notifications\";\r\n\r\nexport const NetworkContext = React.createContext({\r\n  // User Authentication and info\r\n  token: null,\r\n  isAuthenticated: false,\r\n  isLoading: true,\r\n  isAdmin: false,\r\n  signUp: () => {},\r\n  signIn: () => {},\r\n  signOut: () => {},\r\n  forgotPassword: () => {},\r\n  loadToken: () => {},\r\n  // Cached data and methods to retrieve it\r\n  journeys: [],\r\n  userInfo: {\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    age: -1,\r\n  },\r\n\r\n  getJourneys: () => {},\r\n  // Methods to retrieve non-cached data\r\n  getJourneyInfo: () => {},\r\n  getJourneyProgress: () => {},\r\n\r\n  // Methods to complete a quest\r\n  completeQuest: () => {},\r\n\r\n  // Alerts\r\n  displayNoConnectionAlert: () => {},\r\n});\r\n\r\nconst url = \"http://3.15.239.159:8000\";\r\n\r\nexport class NetworkContextProvider extends React.Component {\r\n  state = {\r\n    token: null,\r\n    isAuthenticated: false,\r\n    isLoading: true,\r\n    isAdmin: false,\r\n\r\n    journeys: [],\r\n    userInfo: {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      age: -1,\r\n    },\r\n  };\r\n\r\n  // Send new user registration date to the server, get new token\r\n  signUp = async (username, password, email, firstName, lastName, age, sex) => {\r\n    const data = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: null,\r\n      },\r\n      body: JSON.stringify({\r\n        firstname: firstName,\r\n        lastname: lastName,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        age: age,\r\n        sex: sex,\r\n      }),\r\n    };\r\n    try {\r\n      let fetchResponse = await fetch(url + \"/api/auth/register/\", data);\r\n      let respJson = await fetchResponse.json();\r\n      if (respJson.token) {\r\n        this.setState({\r\n          token: respJson.token,\r\n          isAuthenticated: true,\r\n        });\r\n        await this.setToken(respJson.token);\r\n        this.checkIfAdmin();\r\n        this.getUserMeta();\r\n        registerForPushNotificationsAsync();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.displayNoConnectionAlert();\r\n    }\r\n  };\r\n\r\n  // Send username/password to the server, get token\r\n  signIn = async (login, password) => {\r\n    const data = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: null,\r\n      },\r\n      body: JSON.stringify({\r\n        username: login,\r\n        password: password,\r\n      }),\r\n    };\r\n    try {\r\n      let fetchResponse = await fetch(url + \"/api/auth/login/\", data);\r\n      let respJson = await fetchResponse.json();\r\n\r\n      if (respJson.token) {\r\n        console.log(\"Authenticated!\");\r\n        this.setState({\r\n          token: respJson.token,\r\n          isAuthenticated: true,\r\n        });\r\n        await this.setToken(respJson.token);\r\n        this.checkIfAdmin();\r\n        this.getUserMeta();\r\n        registerForPushNotificationsAsync();\r\n      } else {\r\n        console.log(\"Authentication Failed!\");\r\n      }\r\n    } catch (e) {\r\n      this.displayNoConnectionAlert();\r\n    }\r\n  };\r\n\r\n  // SignOut\r\n  signOut = async () => {\r\n    this.setState({\r\n      token: null,\r\n      isAuthenticated: false,\r\n      isAdmin: false,\r\n    });\r\n\r\n    await this.removeToken();\r\n  };\r\n\r\n  // Forgot Password\r\n  forgotPassword = (email) => {\r\n    console.log(\"TEMP\");\r\n  };\r\n\r\n  // Load token\r\n  loadToken = async () => {\r\n    await AsyncStorage.getItem(\"token\").then((value) => {\r\n      console.log(\"Retrieved token: \", value);\r\n      if (value == null) {\r\n        this.setState({\r\n          token: null,\r\n          isAuthenticated: false,\r\n          isLoading: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          token: value,\r\n          isAuthenticated: true,\r\n          isLoading: false,\r\n        });\r\n        registerForPushNotificationsAsync();\r\n      }\r\n    });\r\n    await this.checkIfAdmin();\r\n  };\r\n\r\n  // Set token\r\n  setToken = async (token) => {\r\n    await AsyncStorage.setItem(\"token\", token);\r\n  };\r\n\r\n  // Remove token from the storage\r\n  removeToken = async () => {\r\n    await AsyncStorage.removeItem(\"token\");\r\n  };\r\n\r\n  // Check if user is an Admin\r\n  checkIfAdmin = async () => {\r\n    const data = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Token \" + this.state.token,\r\n      },\r\n    };\r\n    try {\r\n      let response = await fetch(url + \"/api/auth/is_admin/\", data);\r\n      let respJson = await response.json();\r\n      if (respJson.status) {\r\n        this.setState({\r\n          isAdmin: true,\r\n        });\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.displayNoConnectionAlert();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  getUserMeta = async () => {\r\n    const data = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Token \" + this.state.token,\r\n      },\r\n    };\r\n    try {\r\n      let response = await fetch(url + \"/api/auth/get_user_meta/\", data);\r\n      let respJson = await response.json();\r\n      this.setState({\r\n        userInfo: {\r\n          firstname: respJson.firstname,\r\n          lastname: respJson.lastname,\r\n          age: respJson.age,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.displayNoConnectionAlert();\r\n    }\r\n  };\r\n\r\n  // Get journeys from the server\r\n  getJourneys = async () => {\r\n    console.log(\"Beginning journeys fetch\");\r\n    const data = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + this.state.token,\r\n      },\r\n    };\r\n    try {\r\n      let fetchResponse = await fetch(url + \"/api/journeys/\", data);\r\n      let respJson = await fetchResponse.json();\r\n      // this.state.journeys = await respJson\r\n      this.setState({\r\n        journeys: respJson,\r\n      });\r\n    } catch (e) {\r\n      this.displayNoConnectionAlert();\r\n    }\r\n  };\r\n\r\n  // Get info of a particular journey with given id\r\n  getJourneyInfo = async (journeyId) => {\r\n    const data = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + this.state.token,\r\n      },\r\n    };\r\n    try {\r\n      let fetchResponse = await fetch(\r\n        url + \"/api/journeys/\" + journeyId + \"/\",\r\n        data\r\n      );\r\n      const respJson = await fetchResponse.json();\r\n      return respJson;\r\n    } catch (e) {\r\n      this.displayNoConnectionAlert();\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Get progress of a particular journey with given id\r\n  getJourneyProgress = async (journeyId) => {\r\n    const data = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + this.state.token,\r\n      },\r\n    };\r\n    try {\r\n      let fetchResponse = await fetch(\r\n        url + \"/api/progress/getJourneyProgress/\" + journeyId + \"/\",\r\n        data\r\n      );\r\n      const respJson = await fetchResponse.json();\r\n      return respJson;\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.displayNoConnectionAlert();\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Set a particular quest to be complete with given id\r\n  completeQuest = async (questId, answer, feelingRating, questRating) => {\r\n    const data = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Token \" + this.state.token,\r\n      },\r\n      body: JSON.stringify({\r\n        answer: answer,\r\n        feeling_rating: feelingRating,\r\n        quest_rating: questRating,\r\n      }),\r\n    };\r\n    try {\r\n      let fetchResponse = await fetch(\r\n        url + \"/api/progress/completeQuest/\" + questId + \"/\",\r\n        data\r\n      );\r\n      const respJson = await fetchResponse.json();\r\n      return respJson;\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.displayNoConnectionAlert();\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Alerts\r\n  displayNoConnectionAlert = () => {\r\n    Alert.alert(\"Connection Error\", \"Failed to connect to the server\", [\r\n      {\r\n        text: \"Close\",\r\n        style: \"cancel\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <NetworkContext.Provider\r\n        value={{\r\n          // User auth and info\r\n          token: this.state.token,\r\n          isAuthenticated: this.state.isAuthenticated,\r\n          isLoading: this.state.isLoading,\r\n          isAdmin: this.state.isAdmin,\r\n          signUp: this.signUp,\r\n          signIn: this.signIn,\r\n          signOut: this.signOut,\r\n          forgotPassword: this.forgotPassword,\r\n          loadToken: this.loadToken,\r\n          // Cached data and methods to retrieve them\r\n          journeys: this.state.journeys,\r\n          userInfo: this.state.userInfo,\r\n\r\n          getJourneys: this.getJourneys,\r\n\r\n          // Methods to retrieve non-cached data\r\n          getJourneyInfo: this.getJourneyInfo,\r\n          getJourneyProgress: this.getJourneyProgress,\r\n\r\n          // Method to complete quest\r\n          completeQuest: this.completeQuest,\r\n\r\n          // Alerts\r\n          displayNoConnectionAlert: this.displayNoConnectionAlert,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </NetworkContext.Provider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}