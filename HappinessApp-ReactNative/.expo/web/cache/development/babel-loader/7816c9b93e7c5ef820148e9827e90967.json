{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/FROG/csc301/team-project-4-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/journey_components/JourneyPopup.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NetworkContext } from \"../../contexts/Networking\";\n\nvar JourneyPopupComponent = function (_Component) {\n  _inherits(JourneyPopupComponent, _Component);\n\n  var _super = _createSuper(JourneyPopupComponent);\n\n  function JourneyPopupComponent(props) {\n    var _this;\n\n    _classCallCheck(this, JourneyPopupComponent);\n\n    _this = _super.call(this, props);\n\n    _this.onPopupClose = function () {\n      _this.setState({\n        fetchedData: false\n      });\n\n      _this.props.onClose();\n    };\n\n    _this.componentDidUpdate = function _callee() {\n      var journey, journeyProgress, journeyInfo;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.state.fetchedData) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              if (!_this.props.show) {\n                _context.next = 11;\n                break;\n              }\n\n              journey = _this.props.journey;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(_this.context.getJourneyProgress(journey.id));\n\n            case 6:\n              journeyProgress = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(_this.context.getJourneyInfo(journey.id));\n\n            case 9:\n              journeyInfo = _context.sent;\n\n              _this.setState({\n                completedQuests: journeyProgress.completed,\n                skippedQuests: journeyProgress.skipped,\n                totalQuests: journeyInfo.quests,\n                fetchedData: true\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      completedQuests: [],\n      skippedQuests: [],\n      totalQuests: [],\n      fetchedData: false\n    };\n    return _this;\n  }\n\n  _createClass(JourneyPopupComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var journey = this.props.journey;\n      var name = journey.name,\n          image = journey.image,\n          description = journey.description;\n      var _this$state = this.state,\n          completedQuests = _this$state.completedQuests,\n          totalQuests = _this$state.totalQuests;\n      return React.createElement(Modal, {\n        animationType: \"slide\",\n        visible: this.props.show,\n        transparent: true,\n        onRequestClose: this.onPopupClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        style: styles.closeScreen,\n        onPress: this.onPopupClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.centeredView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"column\",\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.journeyIcon,\n        source: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }), React.createElement(Text, {\n        style: {\n          paddingTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }, name), React.createElement(Text, {\n        style: [{\n          paddingTop: 2\n        }, {\n          color: \"#326295\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }, completedQuests.length, \" / \", totalQuests.length, \" Quests Completed\")), React.createElement(View, {\n        style: {\n          flexDirection: \"column\",\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, description), React.createElement(View, {\n        style: [{\n          flexDirection: \"row\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.closeButton,\n        onPress: this.onPopupClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: Platform.OS === \"ios\" ? styles.text : styles.text2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, \"Close\")), React.createElement(TouchableOpacity, {\n        style: styles.journeyButton,\n        onPress: function onPress() {\n          return _this2.props.onConfirm(journey);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: Platform.OS === \"ios\" ? styles.text : styles.text2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 23\n        }\n      }, \"Begin\")))))))));\n    }\n  }]);\n\n  return JourneyPopupComponent;\n}(Component);\n\nJourneyPopupComponent.contextType = NetworkContext;\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalView: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    flexDirection: \"row\"\n  },\n  journeyIcon: {\n    flex: 1,\n    width: 70,\n    height: 70,\n    borderRadius: 15\n  },\n  journeyButton: {\n    flex: 1,\n    width: \"40%\",\n    justifyContent: \"center\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"#42A5F5\",\n    borderRadius: 30,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    alignItems: \"center\"\n  },\n  closeButton: {\n    flex: 1,\n    width: \"40%\",\n    paddingTop: 10,\n    justifyContent: \"center\",\n    paddingBottom: 10,\n    backgroundColor: \"#D3D3D3\",\n    borderRadius: 30,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    alignItems: \"center\"\n  },\n  closeScreen: {\n    flex: 1\n  },\n  text: {\n    flex: 1,\n    fontSize: 16,\n    color: \"#000000\",\n    paddingTop: 5,\n    paddingBottom: 20\n  },\n  text2: {}\n});\nexport default JourneyPopupComponent;","map":{"version":3,"sources":["/Users/FROG/csc301/team-project-4-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/journey_components/JourneyPopup.js"],"names":["React","Component","NetworkContext","JourneyPopupComponent","props","onPopupClose","setState","fetchedData","onClose","componentDidUpdate","state","show","journey","context","getJourneyProgress","id","journeyProgress","getJourneyInfo","journeyInfo","completedQuests","completed","skippedQuests","skipped","totalQuests","quests","name","image","description","styles","closeScreen","centeredView","modalView","flexDirection","flex","journeyIcon","paddingTop","color","length","padding","closeButton","Platform","OS","text","text2","journeyButton","onConfirm","contextType","StyleSheet","create","justifyContent","alignItems","width","backgroundColor","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","paddingBottom","borderWidth","borderColor","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Modal,\n  Text,\n  View,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Platform,\n  ScrollView,\n} from \"react-native\";\nimport { NetworkContext } from \"../../contexts/Networking\";\n\n// Component for the popup that will show when user selects a journey icon\nclass JourneyPopupComponent extends Component {\n  static contextType = NetworkContext;\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      completedQuests: [],\n      skippedQuests: [],\n      totalQuests: [],\n      fetchedData: false\n    };\n  }\n\n  onPopupClose = () => {\n    this.setState({\n      fetchedData: false\n    })\n    this.props.onClose();\n  }\n\n  componentDidUpdate = async () => {\n    // prevent infinite loop on setState\n    if (this.state.fetchedData)\n      return\n    \n    if (this.props.show) {\n      const { journey } = this.props;\n      const journeyProgress = await this.context.getJourneyProgress(journey.id);\n      const journeyInfo = await this.context.getJourneyInfo(journey.id);\n      this.setState({\n        completedQuests: journeyProgress.completed,\n        skippedQuests: journeyProgress.skipped,\n        totalQuests: journeyInfo.quests,\n        fetchedData: true\n      })\n    }\n  }\n\n  render() {\n    const { journey } = this.props; // Extract journey object from parent\n    const { name, image, description } = journey; // Extract name, image, and description from journey object\n    const { completedQuests, totalQuests } = this.state; // Extract completedQuests and totalQuests from state\n    return (\n      // Use Modal to create popup effect\n      <Modal\n        animationType=\"slide\"\n        visible={this.props.show}\n        transparent={true}\n        onRequestClose={this.onPopupClose}\n      >\n        {/*Create a touchable that will be in the backdrop of the modal that the user can tap to close popup */}\n        <TouchableWithoutFeedback\n          style={styles.closeScreen}\n          onPress={this.onPopupClose}\n        >\n          {/*Center everything*/}\n          <View style={styles.centeredView}>\n            {/*The actual popup view*/}\n            {/*Wrap popup view inside touchablewithoutfeedback so that if user presses it nothing will happen*/}\n            <TouchableWithoutFeedback>\n              <View style={styles.modalView}>\n                {/* Create a column to seperate image + title from description */}\n                <View style={{ flexDirection: \"column\", flex: 1 }}>\n                  <Image style={styles.journeyIcon} source={image} />\n                  <Text style={{ paddingTop: 5 }}>{name}</Text>\n                  <Text style={[{ paddingTop: 2 }, { color: \"#326295\" }]}>\n                    {completedQuests.length} / {totalQuests.length} Quests\n                    Completed\n                  </Text>\n                </View>\n                <View style={{ flexDirection: \"column\", flex: 1 }}>\n                  {/* This is where the description for the journey will go */}\n                  <Text style={{ padding: 10 }}>{description}</Text>\n\n                  {/* Create row for the two buttons (close and begin) */}\n                  <View style={[{ flexDirection: \"row\" }]}>\n                    <TouchableOpacity\n                      style={styles.closeButton}\n                      onPress={this.onPopupClose} // When close button is pressed call on parent to hide popup\n                    >\n                      <Text\n                        style={\n                          Platform.OS === \"ios\" ? styles.text : styles.text2\n                        }\n                      >\n                        Close\n                      </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={styles.journeyButton}\n                      onPress={() => this.props.onConfirm(journey)} // Move on to show journey branch\n                    >\n                      <Text\n                        style={\n                          Platform.OS === \"ios\" ? styles.text : styles.text2\n                        }\n                      >\n                        Begin\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </View>\n            </TouchableWithoutFeedback>\n          </View>\n        </TouchableWithoutFeedback>\n      </Modal>\n    );\n  }\n}\n\n// Styles for views, puttons, and modal\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  modalView: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    flexDirection: \"row\",\n  },\n  journeyIcon: {\n    flex: 1,\n    width: 70,\n    height: 70,\n    borderRadius: 15,\n  },\n  journeyButton: {\n    flex: 1,\n    width: \"40%\",\n    justifyContent: \"center\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"#42A5F5\",\n    borderRadius: 30,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    alignItems: \"center\",\n  },\n  closeButton: {\n    flex: 1,\n    width: \"40%\",\n    paddingTop: 10,\n    justifyContent: \"center\",\n    paddingBottom: 10,\n    backgroundColor: \"#D3D3D3\",\n    borderRadius: 30,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    alignItems: \"center\",\n  },\n  closeScreen: {\n    flex: 1,\n  },\n  text: {\n    flex: 1,\n    fontSize: 16,\n    color: \"#000000\",\n    paddingTop: 5,\n    paddingBottom: 20,\n  },\n  text2: {},\n});\n\nexport default JourneyPopupComponent;\n"]},"metadata":{},"sourceType":"module"}