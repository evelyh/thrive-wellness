{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\cool-\\\\Documents\\\\uoft\\\\3rd Year\\\\CSC301\\\\Project\\\\team-project-4-bellwoods-strategic-capital\\\\HappinessApp-ReactNative\\\\screens\\\\LogIn.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from '@react-navigation/native';\nimport SplashScreen from \"./SplashScreen\";\n\nvar SignIn = function (_React$Component) {\n  _inherits(SignIn, _React$Component);\n\n  var _super = _createSuper(SignIn);\n\n  function SignIn() {\n    _classCallCheck(this, SignIn);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SignIn, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Username\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        placeholderTextColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        autoCapitalize: \"none\",\n        secureTextEntry: true,\n        placeholderTextColor: \"white\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SignIn;\n}(React.Component);\n\nexport { SignIn as default };\nvar styles = StyleSheet.create({\n  input: {\n    width: 350,\n    fontSize: 18,\n    fontWeight: '500',\n    height: 55,\n    backgroundColor: '#42A5F5',\n    margin: 10,\n    color: 'white',\n    padding: 8,\n    borderRadius: 14\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/cool-/Documents/uoft/3rd Year/CSC301/Project/team-project-4-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/LogIn.js"],"names":["React","AsyncStorage","useNavigation","SplashScreen","SignIn","styles","container","input","Component","StyleSheet","create","width","fontSize","fontWeight","height","backgroundColor","margin","color","padding","borderRadius","flex","justifyContent","alignItems"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;SAOEC,Y;;AAGF,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,YAAP;;IAEqBC,M;;;;;;;;;;;;;6BAwCV;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,cAAc,EAAC,MAHjB;AAIE,QAAA,WAAW,EAAE,KAJf;AAKE,QAAA,oBAAoB,EAAC,OALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACE,KADhB;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,cAAc,EAAC,MAHjB;AAIE,QAAA,eAAe,EAAE,IAJnB;AAKE,QAAA,oBAAoB,EAAC,OALvB;AAQE,QAAA,eAAe,MARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AA0BD;;;;EAnEiCP,KAAK,CAACQ,S;;SAArBJ,M;AAsErB,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,KAAK,EAAE;AACLI,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE,KAHP;AAILC,IAAAA,MAAM,EAAE,EAJH;AAKLC,IAAAA,eAAe,EAAE,SALZ;AAMLC,IAAAA,MAAM,EAAE,EANH;AAOLC,IAAAA,KAAK,EAAE,OAPF;AAQLC,IAAAA,OAAO,EAAE,CARJ;AASLC,IAAAA,YAAY,EAAE;AATT,GADwB;AAY/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH;AAZoB,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  Button,\r\n  AsyncStorage,\r\n  Alert\r\n} from 'react-native'\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport SplashScreen from './SplashScreen'\r\n\r\nexport default class SignIn extends React.Component {\r\n\r\n  // state = { \r\n  //   username: '', \r\n  //   password: ''\r\n  // }\r\n  // // Create a fake person login details and add it to the list called fakeLogInBackend\r\n  // person1 = {\r\n  //   username: '',\r\n  //   password: ''\r\n  // }\r\n  // fakeLogInBackend = [this.person1]\r\n\r\n  // onChangeText = (key, value) => {\r\n  //   this.setState({ [key]: value })\r\n  // }\r\n  \r\n  // signIn = async () => {\r\n  //   const { username, password } = this.state\r\n  //   try {\r\n  //      // login with provider\r\n  //      const user = await AsyncStorage.setItem(USER_KEY, username)\r\n  //      console.log('user successfully signed in!', user)\r\n  //      goHome()\r\n  //   } catch (err) {\r\n  //     console.log('error:', err)\r\n  //   }\r\n  // }\r\n  // Check the input when button is pressed, if login details can be found go to next screen\r\n  // checkInput = () => {\r\n  //   if (this.fakeLogInBackend[0].username == this.state.username && this.fakeLogInBackend[0].password == this.state.password) {\r\n  //     const { navigate } = this.props.navigation\r\n  //     // navigate('Home', {name: this.state.username})\r\n  //     navigate('Home')\r\n  //   }\r\n  //   else {\r\n  //     alert(\"Invalid username/password\")\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder='Username'\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          placeholderTextColor='white'\r\n          // value={username}\r\n          // onChangeText={setUsername}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder='Password'\r\n          autoCapitalize=\"none\"\r\n          secureTextEntry={true}\r\n          placeholderTextColor='white'\r\n          // value={password}\r\n          // onChangeText={setPassword}\r\n          secureTextEntry\r\n        />\r\n        {/* Go to Home screen once Button is pressed. Pass in username as data to Home.js screen*/}\r\n        {/* <Button title=\"Sign in\" onPress={() => signIn({ username, password })} /> */}\r\n        {/* <Button title=\"Sign in\" onPress={() => this.rountes.signIn()} /> */}\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    width: 350,\r\n    fontSize: 18,\r\n    fontWeight: '500',\r\n    height: 55,\r\n    backgroundColor: '#42A5F5',\r\n    margin: 10,\r\n    color: 'white',\r\n    padding: 8,\r\n    borderRadius: 14\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}