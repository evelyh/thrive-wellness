{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Desktop\\\\team-project-2-bellwoods-strategic-capital\\\\HappinessApp-ReactNative\\\\screens\\\\JourneyManagement\\\\CreateJourneyScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NetworkContext } from \"../../contexts/Networking\";\nvar url = 'http://3.15.239.159:8000';\n\nvar CreateJourneyScreen = function (_React$Component) {\n  _inherits(CreateJourneyScreen, _React$Component);\n\n  var _super = _createSuper(CreateJourneyScreen);\n\n  function CreateJourneyScreen() {\n    var _this;\n\n    _classCallCheck(this, CreateJourneyScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: '',\n      description: ''\n    };\n\n    _this.onChangeText = function (key, val) {\n      _this.setState(_defineProperty({}, key, val));\n    };\n\n    _this.createNewJourney = function _callee() {\n      var data, response, respText;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Sending new journey info\");\n\n              if (!(_this.state.name === '' || _this.state.description === '')) {\n                _context.next = 4;\n                break;\n              }\n\n              _this.displayEmptyFieldsAlert();\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              data = {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': 'Token ' + _this.context.token\n                },\n                body: JSON.stringify({\n                  name: _this.state.name,\n                  description: _this.state.description\n                })\n              };\n              _context.prev = 5;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(fetch(url + '/api/journeys/', data));\n\n            case 8:\n              response = _context.sent;\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 11:\n              respText = _context.sent;\n\n              _this.props.navigation.goBack();\n\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](5);\n\n              _this.context.displayNoConnectionAlert();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[5, 15]], Promise);\n    };\n\n    _this.displayEmptyFieldsAlert = function () {\n      Alert.alert(\"Empty input\", \"Please make sure to fill all required fields.\", [{\n        text: \"Close\",\n        style: \"cancel\"\n      }]);\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateJourneyScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Journey name\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('name', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Description\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('description', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.buttonContainer,\n        onPress: this.createNewJourney,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, \"Create new Journey\")));\n    }\n  }]);\n\n  return CreateJourneyScreen;\n}(React.Component);\n\nCreateJourneyScreen.contextType = NetworkContext;\nexport { CreateJourneyScreen as default };\nvar styles = StyleSheet.create({\n  input: {\n    width: '85%',\n    height: 55,\n    backgroundColor: 'white',\n    margin: 10,\n    padding: 8,\n    borderRadius: 14,\n    color: 'green',\n    fontSize: 18,\n    fontWeight: '500'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    marginTop: 10,\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: '65%',\n    borderRadius: 30,\n    textAlign: \"center\",\n    backgroundColor: \"#22AAAA\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Calvin/Desktop/team-project-2-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/JourneyManagement/CreateJourneyScreen.js"],"names":["React","NetworkContext","url","CreateJourneyScreen","state","name","description","onChangeText","key","val","setState","createNewJourney","console","log","displayEmptyFieldsAlert","data","method","headers","context","token","body","JSON","stringify","fetch","response","json","respText","props","navigation","goBack","displayNoConnectionAlert","Alert","alert","text","style","styles","container","input","buttonContainer","Component","contextType","StyleSheet","create","width","height","backgroundColor","margin","padding","borderRadius","color","fontSize","fontWeight","flex","justifyContent","alignItems","marginTop","flexDirection","marginBottom","textAlign"],"mappings":"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","sourcesContent":["// CreateJourneyScreen.js\r\nimport React from 'react'\r\nimport {\r\n  TextInput,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Text, Alert\r\n} from 'react-native'\r\n\r\nimport { NetworkContext } from '../../contexts/Networking'\r\n\r\nconst url = 'http://3.15.239.159:8000'\r\n\r\nexport default class CreateJourneyScreen extends React.Component {\r\n\r\n  static contextType = NetworkContext\r\n\r\n  state = {\r\n    name: '',\r\n    description: ''\r\n  }\r\n\r\n  onChangeText = (key, val) => {\r\n    this.setState({ [key]: val })\r\n  }\r\n\r\n  createNewJourney = async () => {\r\n    console.log(\"Sending new journey info\")\r\n    if (this.state.name === '' || this.state.description === '') {\r\n      this.displayEmptyFieldsAlert()\r\n      return\r\n    }\r\n    const data = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Token ' + this.context.token\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        description: this.state.description\r\n      })\r\n    }\r\n    try {\r\n      let response = await fetch(url + '/api/journeys/', data)\r\n      let respText = await response.json()\r\n      this.props.navigation.goBack()\r\n    } catch (e) {\r\n      this.context.displayNoConnectionAlert()\r\n    }\r\n  }\r\n\r\n  displayEmptyFieldsAlert = () => {\r\n    Alert.alert(\r\n      \"Empty input\",\r\n      \"Please make sure to fill all required fields.\",\r\n      [\r\n        {\r\n          text: \"Close\",\r\n          style: \"cancel\"\r\n        }\r\n      ]\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder='Journey name'\r\n          autoCapitalize=\"none\"\r\n          onChangeText={(val) => this.onChangeText('name', val)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder='Description'\r\n          autoCapitalize=\"none\"\r\n           onChangeText={(val) => this.onChangeText('description', val)}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.buttonContainer}\r\n          onPress={this.createNewJourney}\r\n        >\r\n          <Text>Create new Journey</Text>\r\n        </TouchableOpacity>\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    width: '85%',\r\n    height: 55,\r\n    backgroundColor: 'white',\r\n    margin: 10,\r\n    padding: 8,\r\n    borderRadius: 14,\r\n    color: 'green',\r\n    fontSize: 18,\r\n    fontWeight: '500',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 10,\r\n    height: 45,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n    width: '65%',\r\n    borderRadius: 30,\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#22AAAA\",\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}