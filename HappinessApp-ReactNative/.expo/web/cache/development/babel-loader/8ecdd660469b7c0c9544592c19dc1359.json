{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Desktop\\\\team-project-2-bellwoods-strategic-capital\\\\HappinessApp-ReactNative\\\\screens\\\\Authentication\\\\ForgotPassword.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { NetworkContext } from \"../../contexts/Networking\";\n\nvar FotgotPassword = function (_React$Component) {\n  _inherits(FotgotPassword, _React$Component);\n\n  var _super = _createSuper(FotgotPassword);\n\n  function FotgotPassword() {\n    var _this;\n\n    _classCallCheck(this, FotgotPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"\",\n      emailSubmitted: false\n    };\n\n    _this.onChangeText = function (key, value) {\n      _this.setState(_defineProperty({}, key, value));\n    };\n\n    _this.checkInput = function () {\n      var email = _this.state.email;\n\n      if (email === \"\") {\n        _this.displayEmptyFieldsAlert();\n\n        return;\n      }\n\n      _this.context.forgotPassword(email);\n\n      w;\n\n      _this.setState({\n        emailSubmitted: true\n      });\n    };\n\n    _this.displayEmptyFieldsAlert = function () {\n      Alert.alert(\"Empty input\", \"Please make sure to fill all required fields.\", [{\n        text: \"Close\",\n        style: \"cancel\"\n      }]);\n    };\n\n    return _this;\n  }\n\n  _createClass(FotgotPassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (emailSubmitted == true) return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"Check email inbox for password information. \")));\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        placeholderTextColor: \"#BADEDE\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText(\"email\", val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        style: styles.button,\n        title: \"Submit\",\n        onPress: this.checkInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return FotgotPassword;\n}(React.Component);\n\nFotgotPassword.contextType = NetworkContext;\nexport { FotgotPassword as default };\nvar styles = StyleSheet.create({\n  input: {\n    width: \"90%\",\n    fontSize: 18,\n    fontWeight: \"500\",\n    height: 55,\n    backgroundColor: \"white\",\n    color: \"green\",\n    margin: 10,\n    padding: 8,\n    borderRadius: 14\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  inputContainer: {\n    marginTop: 30,\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  button: {\n    fontSize: 14,\n    color: \"#f194ff\",\n    fontFamily: \"Comfortaa\",\n    letterSpacing: -0.015,\n    width: \"90%\",\n    marginRight: 40,\n    marginLeft: 40,\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"pink\",\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Calvin/Desktop/team-project-2-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/Authentication/ForgotPassword.js"],"names":["React","NetworkContext","FotgotPassword","state","email","emailSubmitted","onChangeText","key","value","setState","checkInput","displayEmptyFieldsAlert","context","forgotPassword","w","Alert","alert","text","style","styles","container","inputContainer","input","val","button","Component","contextType","StyleSheet","create","width","fontSize","fontWeight","height","backgroundColor","color","margin","padding","borderRadius","flex","alignItems","marginTop","fontFamily","letterSpacing","marginRight","marginLeft","paddingTop","paddingBottom","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { NetworkContext } from \"../../contexts/Networking\";\r\n\r\nexport default class FotgotPassword extends React.Component {\r\n  static contextType = NetworkContext;\r\n\r\n  // state to keep track of email\r\n  state = {\r\n    email: \"\",\r\n    emailSubmitted: false,\r\n  };\r\n\r\n  onChangeText = (key, value) => {\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  // Check the input before sending data to the server\r\n  checkInput = () => {\r\n    // i.e. check if the email (unless using login) is valid etc\r\n    const { email } = this.state;\r\n    if (email === \"\") {\r\n      this.displayEmptyFieldsAlert();\r\n      return;\r\n    }\r\n    this.context.forgotPassword(email);\r\n    w;\r\n    this.setState({\r\n      emailSubmitted: true,\r\n    });\r\n  };\r\n\r\n  displayEmptyFieldsAlert = () => {\r\n    Alert.alert(\r\n      \"Empty input\",\r\n      \"Please make sure to fill all required fields.\",\r\n      [\r\n        {\r\n          text: \"Close\",\r\n          style: \"cancel\",\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (emailSubmitted == true)\r\n      return (\r\n        <SafeAreaView style={styles.container}>\r\n          <View style={styles.inputContainer}>\r\n            <Text>Check email inbox for password information. </Text>\r\n          </View>\r\n        </SafeAreaView>\r\n      );\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Email\"\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            placeholderTextColor=\"#BADEDE\"\r\n            onChangeText={(val) => this.onChangeText(\"email\", val)}\r\n          />\r\n          <Button\r\n            style={styles.button}\r\n            title=\"Submit\"\r\n            onPress={this.checkInput}\r\n          />\r\n        </View>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    width: \"90%\",\r\n    fontSize: 18,\r\n    fontWeight: \"500\",\r\n    height: 55,\r\n    backgroundColor: \"white\",\r\n    color: \"green\",\r\n    margin: 10,\r\n    padding: 8,\r\n    borderRadius: 14,\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  inputContainer: {\r\n    marginTop: 30,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  button: {\r\n    fontSize: 14,\r\n    color: \"#f194ff\",\r\n    fontFamily: \"Comfortaa\",\r\n    letterSpacing: -0.015,\r\n    width: \"90%\",\r\n    marginRight: 40,\r\n    marginLeft: 40,\r\n    marginTop: 10,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: \"pink\",\r\n    borderRadius: 10,\r\n    borderWidth: 2,\r\n    borderColor: \"#fff\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}