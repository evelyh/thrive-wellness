{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Desktop\\\\team-project-2-bellwoods-strategic-capital\\\\HappinessApp-ReactNative\\\\screens\\\\QuestScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport \"react-native-gesture-handler\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar QuestScreen = function (_React$Component) {\n  _inherits(QuestScreen, _React$Component);\n\n  var _super = _createSuper(QuestScreen);\n\n  function QuestScreen(props) {\n    var _this;\n\n    _classCallCheck(this, QuestScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onChangeText = function (key, value) {\n      _this.setState(_defineProperty({}, key, value));\n    };\n\n    _this.state = {\n      answer: ''\n    };\n    return _this;\n  }\n\n  _createClass(QuestScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var quest = this.props.route.params.quest;\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.view1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: require(\"../assets/gee_me_054.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }), React.createElement(Image, {\n        style: styles.image,\n        source: require(\"../assets/gee_me_100.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.view2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.heading2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, quest.name, \" Quest\"), React.createElement(View, {\n        style: styles.line,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.heading3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, \" Directions \"), React.createElement(View, {\n        style: styles.line2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.heading3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, quest.description), React.createElement(TextInput, {\n        style: styles.input,\n        multiline: true,\n        placeholder: \"How did doing the quest make you feel? Type here.\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(val) {\n          return _this2.onChangeText('answer', val);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: styles.buttonsView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.journeyButton,\n        onPress: function onPress() {\n          _this2.props.navigation.navigate(\"Feedback\", {\n            answer: _this2.state.answer,\n            quest: quest\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return QuestScreen;\n}(React.Component);\n\nexport { QuestScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#BADEDE\"\n  },\n  view1: {\n    flex: 1.3,\n    backgroundColor: \"#BADEDE\",\n    flexDirection: \"row\"\n  },\n  view2: {\n    flex: 7,\n    backgroundColor: \"white\",\n    borderTopRightRadius: 23,\n    borderTopLeftRadius: 23\n  },\n  buttonsView: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  journeyButton: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 20,\n    marginRight: 20,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: \"#C9DBC5\",\n    borderRadius: 30,\n    borderWidth: 1,\n    borderColor: \"#efefef\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    fontSize: 20,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: 24,\n    color: \"#918573\"\n  },\n  heading2: {\n    fontSize: 24,\n    color: \"#918573\",\n    marginLeft: 25,\n    marginTop: 16\n  },\n  heading3: {\n    fontSize: 20,\n    color: \"#27214D\",\n    marginLeft: 25,\n    marginTop: 16\n  },\n  question_body: {\n    fontSize: 20,\n    color: \"#27214D\",\n    marginLeft: 25,\n    marginTop: 16\n  },\n  input: {\n    flex: 1,\n    backgroundColor: \"white\",\n    margin: 10,\n    padding: 8,\n    color: \"#918573\",\n    fontSize: 18\n  },\n  line: {\n    backgroundColor: \"#F3F3F3\",\n    height: 1,\n    marginTop: 8\n  },\n  line2: {\n    backgroundColor: \"#6C9191\",\n    height: 1,\n    width: 100,\n    marginLeft: 26,\n    marginTop: 8\n  }\n});","map":{"version":3,"sources":["C:/Users/Calvin/Desktop/team-project-2-bellwoods-strategic-capital/HappinessApp-ReactNative/screens/QuestScreen.js"],"names":["React","QuestScreen","props","onChangeText","key","value","setState","state","answer","quest","route","params","styles","container","view1","image","require","view2","heading2","name","line","heading3","line2","description","input","val","buttonsView","journeyButton","navigation","navigate","text","Component","StyleSheet","create","flex","backgroundColor","flexDirection","borderTopRightRadius","borderTopLeftRadius","marginTop","marginLeft","marginRight","paddingTop","paddingBottom","borderRadius","borderWidth","borderColor","alignItems","justifyContent","fontSize","color","textAlign","heading","question_body","margin","padding","height","width"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  ScrollView,\r\n} from \"react-native\";\r\n\r\nexport default class QuestScreen extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      answer: ''\r\n    }\r\n  }\r\n\r\n  onChangeText = (key, value) => {\r\n    this.setState({ [key]: value })\r\n  }\r\n\r\n  render() {\r\n    const { quest } = this.props.route.params;\r\n\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <View style={styles.view1}>\r\n          <Image\r\n            style={styles.image}\r\n            source={require(\"../assets/gee_me_054.png\")}\r\n          />\r\n          <Image\r\n            style={styles.image}\r\n            source={require(\"../assets/gee_me_100.png\")}\r\n          />\r\n        </View>\r\n        <View style={styles.view2}>\r\n          <ScrollView>\r\n            <Text style={styles.heading2}>{quest.name} Quest</Text>\r\n            <View style={styles.line} />\r\n            <Text style={styles.heading3}> Directions </Text>\r\n            <View style={styles.line2} />\r\n\r\n            <Text style={styles.heading3}>{quest.description}</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              multiline\r\n              placeholder=\"How did doing the quest make you feel? Type here.\"\r\n              autoCapitalize=\"none\"\r\n              onChangeText={val => this.onChangeText('answer', val)}\r\n            />\r\n          </ScrollView>\r\n        </View>\r\n        <View style={styles.buttonsView}>\r\n          <TouchableOpacity\r\n            style={styles.journeyButton}\r\n            onPress={() => {\r\n              this.props.navigation.navigate(\"Feedback\", {\r\n                answer: this.state.answer,\r\n                quest: quest,\r\n              })\r\n            }}\r\n          >\r\n            <Text style={styles.text}>Submit</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#BADEDE\",\r\n  },\r\n  view1: {\r\n    flex: 1.3,\r\n    backgroundColor: \"#BADEDE\",\r\n    flexDirection: \"row\",\r\n  },\r\n  view2: {\r\n    flex: 7,\r\n    backgroundColor: \"white\",\r\n    borderTopRightRadius: 23,\r\n    borderTopLeftRadius: 23,\r\n  },\r\n\r\n  buttonsView: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  journeyButton: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: \"#C9DBC5\",\r\n    borderRadius: 30,\r\n    borderWidth: 1,\r\n    borderColor: \"#efefef\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  text: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  heading: {\r\n    fontSize: 24,\r\n    color: \"#918573\",\r\n    //fontFamily: \"Comfortaa-Regular\"\r\n  },\r\n  heading2: {\r\n    fontSize: 24,\r\n    color: \"#918573\",\r\n    //fontFamily: \"Comfortaa-Regular\"\r\n    marginLeft: 25,\r\n    marginTop: 16,\r\n  },\r\n\r\n  heading3: {\r\n    fontSize: 20,\r\n    color: \"#27214D\",\r\n    //fontFamily: \"Comfortaa-Regular\"\r\n    marginLeft: 25,\r\n    marginTop: 16,\r\n  },\r\n\r\n  question_body: {\r\n    fontSize: 20,\r\n    color: \"#27214D\",\r\n    marginLeft: 25,\r\n    marginTop: 16,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    margin: 10,\r\n    padding: 8,\r\n    color: \"#918573\",\r\n    fontSize: 18,\r\n  },\r\n\r\n  line: {\r\n    backgroundColor: \"#F3F3F3\",\r\n    height: 1,\r\n    marginTop: 8,\r\n  },\r\n\r\n  line2: {\r\n    backgroundColor: \"#6C9191\",\r\n    height: 1,\r\n    width: 100,\r\n    marginLeft: 26,\r\n    marginTop: 8,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}